syntax = "proto3";

package yandex.cloud.video.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;video";
option java_package = "yandex.cloud.api.video.v1";

message Video {
  reserved 2001, 2002;

  // Reserved for future use.
  reserved 7, 10, 14 to 16, 19 to 99, 102 to 199, 201 to 999, 1001 to 1999;

  // ID of the video.
  string id = 1;
  // ID of the channel where the video was created.
  string channel_id = 2;

  // Video title displayed to users.
  string title = 3;
  // Detailed description of the video.
  string description = 4;
  // ID of the video's thumbnail image.
  string thumbnail_id = 5;

  // Video status.
  VideoStatus status = 6;
  // Error message describing the reason for video processing failure, if any.
  string error_message = 18;
  // Visibility status of the video.
  VisibilityStatus visibility_status = 9;

  // Video duration. Optional, may be empty until the transcoding result is ready.
  google.protobuf.Duration duration = 8;

  // Auto-transcoding setting.
  // Set ENABLE to automatically initiate transcoding after upload,
  // or DISABLE for manual initiation via the Transcode() method.
  AutoTranscode auto_transcode = 11;
  // Enable advertisement for this video.
  // Default: true.
  // Set explicitly to false to disable advertisements for a specific video.
  google.protobuf.BoolValue enable_ad = 17;

  // List of IDs defining the active subtitles for the video.
  repeated string subtitle_ids = 12;
  // Additional video processing features and their results.
  VideoFeatures features = 13;

  // Video upload source definition (one source variant must be chosen).
  oneof source {
    // Upload video using the tus protocol.
    VideoTUSDSource tusd = 1000;
  }

  // Video access permission settings.
  oneof access_rights {
    // Publicly accessible video available for viewing by anyone with the direct link.
    // No additional authorization or access control is applied.
    VideoPublicAccessRights public_access = 2000;
    // Checking access rights using url's signature.
    VideoSignURLAccessRights sign_url_access = 2003;
  }

  // Time when video was created.
  google.protobuf.Timestamp created_at = 100;
  // Time of last video update.
  google.protobuf.Timestamp updated_at = 101;

  // Custom labels as `` key:value `` pairs. Maximum 64 per resource.
  map<string, string> labels = 200;

  enum VideoStatus {
    reserved 3, 6;

    // Video status unspecified.
    VIDEO_STATUS_UNSPECIFIED = 0;
    // Waiting for all the bytes to be loaded.
    WAIT_UPLOADING = 1;
    // Fully uploaded, ready to be transcoded.
    UPLOADED = 2;
    // Video is being processed.
    PROCESSING = 4;
    // Successfully processed and ready for use.
    READY = 5;
    // Video processing has failed.
    ERROR = 7;
  }

  enum VisibilityStatus {
    // Visibility status unspecified.
    VISIBILITY_STATUS_UNSPECIFIED = 0;
    // Video published and available for public viewing.
    PUBLISHED = 1;
    // Video unpublished, available only to administrators.
    UNPUBLISHED = 2;
  }
}

// Video upload source via tus protocol.
message VideoTUSDSource {
  // URL for uploading video via the tus protocol.
  string url = 1;
  // Size of the uploaded file, in bytes.
  int64 file_size = 2;
}

message VideoPublicAccessRights {}

message VideoSignURLAccessRights {}

enum AutoTranscode {
  // Unspecified auto transcoding value.
  AUTO_TRANSCODE_UNSPECIFIED = 0;
  // Enable auto transcoding.
  ENABLE = 1;
  // Disable auto transcoding.
  DISABLE = 2;
}

message VideoFeatures {
  // Summarization result.
  Summary summary = 1;

  message Summary {
    reserved 2;

    FeatureResult result = 1;
    repeated SummaryURL urls = 3;

    message SummaryURL {
      string url = 1;

      // Input audio track index (one-based).
      int64 track_index = 2;
      // Source track language (three-letter code according to ISO 639-2/T, ISO 639-2/B, or ISO 639-3).
      // Either provided in transcoding settings earlier or automatically deduced.
      string src_lang = 3;
    }
  }

  enum FeatureResult {
    FEATURE_RESULT_UNSPECIFIED = 0;
    // Feature has not been requested.
    NOT_REQUESTED = 1;
    // Feature is being processed.
    PROCESSING = 2;
    // Feature processing completed successfully.
    SUCCESS = 3;
    // Feature processing has failed.
    FAILED = 4;
  }
}
