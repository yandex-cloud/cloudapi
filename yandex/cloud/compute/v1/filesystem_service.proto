syntax = "proto3";

package yandex.cloud.compute.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/access/access.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/compute/v1/filesystem.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;compute";
option java_package = "yandex.cloud.api.compute.v1";

// A set of methods for managing filesystems.
service FilesystemService {

  // Returns the specified filesystem.
  //
  // To get the list of available filesystems, make a [List] request.
  rpc Get (GetFilesystemRequest) returns (Filesystem) {
    option (google.api.http) = { get: "/compute/v1/filesystems/{filesystem_id}" };
  }

  // Lists filesystems in the specified folder.
  rpc List (ListFilesystemsRequest) returns (ListFilesystemsResponse) {
    option (google.api.http) = { get: "/compute/v1/filesystems" };
  }

  // Creates a filesystem in the specified folder.
  rpc Create (CreateFilesystemRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1/filesystems" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateFilesystemMetadata"
      response: "Filesystem"
    };
  }

  // Updates the specified filesystem.
  rpc Update (UpdateFilesystemRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/compute/v1/filesystems/{filesystem_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateFilesystemMetadata"
      response: "Filesystem"
    };
  }

  // Deletes the specified filesystem.
  //
  // Deleting a filesystem removes its data permanently and is irreversible.
  //
  // It is not possible to delete a filesystem that is attached to an instance.
  rpc Delete (DeleteFilesystemRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/compute/v1/filesystems/{filesystem_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteFilesystemMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Lists operations for the specified filesystem.
  rpc ListOperations (ListFilesystemOperationsRequest) returns (ListFilesystemOperationsResponse) {
    option (google.api.http) = { get: "/compute/v1/filesystems/{filesystem_id}/operations" };
  }

  // access

  // Lists access bindings for the filesystem.
  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse) {
    option (google.api.http) = { get: "/compute/v1/filesystems/{resource_id}:listAccessBindings" };
  }

  // Sets access bindings for the filesystem.
  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1/filesystems/{resource_id}:setAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "access.AccessBindingsOperationResult"
    };
  }

  // Updates access bindings for the filesystem.
  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1/filesystems/{resource_id}:updateAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "access.AccessBindingsOperationResult"
    };
  }
}

message GetFilesystemRequest {
  // ID of the filesystem to return.
  //
  // To get the filesystem ID, make a [FilesystemService.List] request.
  string filesystem_id = 1 [(required) = true, (length) = "<=50"];
}

message ListFilesystemsRequest {
  // ID of the folder to list filesystems in.
  //
  // To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than `page_size`,
  // the service returns a [ListFilesystemsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set `page_token` to the
  // [ListFilesystemsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression consists of one or more conditions united by `AND` operator: `<condition1> [AND <condition2> [<...> AND <conditionN>]]`.
  //
  // Each condition has the form `<field> <operator> <value>`, where:
  // 1. `<field>` is the field name. Currently you can use filtering only on the limited number of fields.
  // 2. `<operator>` is a logical operator, one of `=`, `!=`, `IN`, `NOT IN`.
  // 3. `<value>` represents a value.
  // String values should be written in double (`"`) or single (`'`) quotes. C-style escape sequences are supported (`\"` turns to `"`, `\'` to `'`, `\\` to backslash).
  string filter = 4 [(length) = "<=1000"];

  // By which column the listing should be ordered and in which direction,
  // format is "createdAt desc". "id asc" if omitted.
  // The default sorting order is ascending
  string order_by = 5 [(length) = "<=100"];
}

message ListFilesystemsResponse {
  // List of filesystems in the specified folder.
  repeated Filesystem filesystems = 1;

  // Token for getting the next page of the list. If the number of results is greater than
  // the specified [ListFilesystemsRequest.page_size], use `next_page_token` as the value
  // for the [ListFilesystemsRequest.page_token] parameter in the next list request.
  //
  // Each subsequent page will have its own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message CreateFilesystemRequest {
  // ID of the folder to create a filesystem in.
  //
  // To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the filesystem. The name must be unique within the folder.
  string name = 2 [(pattern) = "|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?"];

  // Description of the filesystem.
  string description = 3 [(length) = "<=256"];

  // Filesystem labels as `key:value` pairs.
  // For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  // ID of the filesystem type.
  //
  // To get a list of available filesystem types, make a [yandex.cloud.compute.v1.DiskTypeService.List] request.
  //
  // The filesystem type cannot be updated after the filesystem creation.
  string type_id = 5 [(length) = "<=50"];

  // ID of the availability zone where the filesystem resides.
  //
  // To get a list of available zones, make a [yandex.cloud.compute.v1.ZoneService.List] request.
  //
  // A filesystem can be attached only to virtual machines residing in the same availability zone.
  // The filesystem availability zone cannot be updated after the filesystem creation.
  string zone_id = 6 [(required) = true, (length) = "<=50"];

  // Size of the filesystem, specified in bytes.
  //
  // The size of the filesystem cannot be updated after the filesystem creation.
  int64 size = 7 [(required) = true];

  // Block size used for the filesystem, specified in bytes.
  //
  // The block size cannot be updated after the filesystem creation.
  //
  // Default value: 4096.
  int64 block_size = 8;
}

message CreateFilesystemMetadata {
  // ID of the filesystem that is being created.
  string filesystem_id = 1;
}

message UpdateFilesystemRequest {
  // ID of the filesystem to update.
  //
  // To get the filesystem ID, make a [FilesystemService.List] request.
  string filesystem_id = 1 [(required) = true, (length) = "<=50"];

  // Field mask that specifies which attributes of the filesystem should be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New name of the filesystem. The name must be unique within the folder.
  string name = 3 [(pattern) = "|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?"];

  // New description of the filesystem.
  string description = 4 [(length) = "<=256"];

  // New filesystem labels as `key:value` pairs.
  // For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
  //
  // Existing set of labels is completely replaced by the provided set, so if you just want
  // to add or remove a label:
  // 1. Get the current set of labels with a [FilesystemService.Get] request.
  // 2. Add or remove a label in this set.
  // 3. Send the new set in this field.
  map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  // Size of the filesystem, specified in bytes.
  int64 size = 6;
}

message UpdateFilesystemMetadata {
  // ID of the filesystem that is being updated.
  string filesystem_id = 1 ;
}

message DeleteFilesystemRequest {
  // ID of the filesystem to delete.
  //
  // To get the filesystem ID, make a [FilesystemService.List] request.
  string filesystem_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteFilesystemMetadata {
  // ID of the filesystem that is being deleted.
  string filesystem_id = 1;
}

message ListFilesystemOperationsRequest {
  // ID of the filesystem to list operations for.
  //
  // To get the filesystem ID, make a [FilesystemService.List] request.
  string filesystem_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than `page_size`, the service returns a [ListFilesystemOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set `page_token` to the
  // [ListFilesystemOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListFilesystemOperationsResponse {
  // List of operations for the specified filesystem.
  repeated operation.Operation operations = 1;

  // Token for getting the next page of the list. If the number of results is greater than
  // the specified [ListFilesystemOperationsRequest.page_size], use `next_page_token` as the value
  // for the [ListFilesystemOperationsRequest.page_token] parameter in the next list request.
  //
  // Each subsequent page will have its own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}
