syntax = "proto3";

package yandex.cloud.compute.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "yandex/cloud/access/access.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/compute/v1/disk.proto";
import "yandex/cloud/compute/v1/disk_placement_group.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;compute";
option java_package = "yandex.cloud.api.compute.v1";

// A set of methods for managing DiskPlacementGroup resources.
service DiskPlacementGroupService {
  // Returns the specified placement group.
  rpc Get (GetDiskPlacementGroupRequest) returns (DiskPlacementGroup) {
    option (google.api.http) = { get: "/compute/v1/diskPlacementGroups/{disk_placement_group_id}" };
  }

  // Retrieves the list of placement groups in the specified folder.
  rpc List (ListDiskPlacementGroupsRequest) returns (ListDiskPlacementGroupsResponse) {
    option (google.api.http) = { get: "/compute/v1/diskPlacementGroups" };
  }

  // Creates a placement group in the specified folder.
  rpc Create (CreateDiskPlacementGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1/diskPlacementGroups" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateDiskPlacementGroupMetadata"
      response: "DiskPlacementGroup"
    };
  }

  // Updates the specified placement group.
  rpc Update (UpdateDiskPlacementGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/compute/v1/diskPlacementGroups/{disk_placement_group_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateDiskPlacementGroupMetadata"
      response: "DiskPlacementGroup"
    };
  }

  // Deletes the specified placement group.
  rpc Delete (DeleteDiskPlacementGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/compute/v1/diskPlacementGroups/{disk_placement_group_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteDiskPlacementGroupMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Lists disks for the specified placement group.
  rpc ListDisks (ListDiskPlacementGroupDisksRequest) returns (ListDiskPlacementGroupDisksResponse) {
    option (google.api.http) = { get: "/compute/v1/diskPlacementGroups/{disk_placement_group_id}/disks" };
  }

  // Lists operations for the specified placement group.
  rpc ListOperations (ListDiskPlacementGroupOperationsRequest) returns (ListDiskPlacementGroupOperationsResponse) {
    option (google.api.http) = { get: "/compute/v1/diskPlacementGroups/{disk_placement_group_id}/operations" };
  }

  // access

  // Lists access bindings for the disk placement group.
  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse) {
    option (google.api.http) = { get: "/compute/v1/diskPlacementGroups/{resource_id}:listAccessBindings" };
  }

  // Sets access bindings for the disk placement group.
  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1/diskPlacementGroups/{resource_id}:setAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "access.AccessBindingsOperationResult"
    };
  }

  // Updates access bindings for the disk placement group.
  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1/diskPlacementGroups/{resource_id}:updateAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "access.AccessBindingsOperationResult"
    };
  }
}

message GetDiskPlacementGroupRequest {
  // ID of the placement group to return.
  // To get the placement group ID, use [DiskPlacementGroupService.List] request.
  string disk_placement_group_id = 1 [(required) = true, (length) = "<=50"];
}

message ListDiskPlacementGroupsRequest {
  // ID of the folder to list placement groups in.
  // To get the folder ID, use [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListDiskPlacementGroupsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results,
  // set [page_token] to the [ListDiskPlacementGroupsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression consists of one or more conditions united by `AND` operator: `<condition1> [AND <condition2> [<...> AND <conditionN>]]`.
  //
  // Each condition has the form `<field> <operator> <value>`, where:
  // 1. `<field>` is the field name. Currently you can use filtering only on the limited number of fields.
  // 2. `<operator>` is a logical operator, one of `=`, `!=`, `IN`, `NOT IN`.
  // 3. `<value>` represents a value.
  // String values should be written in double (`"`) or single (`'`) quotes. C-style escape sequences are supported (`\"` turns to `"`, `\'` to `'`, `\\` to backslash).
  string filter = 4 [(length) = "<=1000"];

  // By which column the listing should be ordered and in which direction,
  // format is "createdAt desc". "id asc" if omitted.
  // The default sorting order is ascending
  string order_by = 5 [(length) = "<=100"];
}

message ListDiskPlacementGroupsResponse {
  // Lists placement groups for the specified folder.
  repeated DiskPlacementGroup disk_placement_groups = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListDiskPlacementGroupsRequest.page_size], use
  // [next_page_token] as the value
  // for the [ListDiskPlacementGroupsRequest.page_token] query parameter
  // in the next list request. Each subsequent list request will have its own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateDiskPlacementGroupRequest {
  // ID of the folder to create a placement group in.
  // To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the placement group.
  string name = 2 [(pattern) = "|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?"];

  // Description of the placement group.
  string description = 3 [(length) = "<=256"];

  // Resource labels as `key:value` pairs.
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  // ID of the availability zone where the placement group resides.
  // To get a list of available zones use the [yandex.cloud.compute.v1.ZoneService.List] request.
  string zone_id = 5 [(required) = true, (length) = "<=50"];

  // Placement strategy.
  oneof placement_strategy {
    option (exactly_one) = true;

    // Distribute disks over distinct failure domains.
    DiskSpreadPlacementStrategy spread_placement_strategy = 6;

    // Distribute disks over partitions.
    DiskPartitionPlacementStrategy partition_placement_strategy = 7;
  }
}

message CreateDiskPlacementGroupMetadata {
  // ID of the placement group that is being created.
  string disk_placement_group_id = 1;
}

message UpdateDiskPlacementGroupRequest {
  // ID of the placement group to update.
  // To get the placement group ID, use an [DiskPlacementGroupService.List] request.
  string disk_placement_group_id = 1 [(required) = true, (length) = "<=50"];

  // Field mask that specifies which fields of the DiskPlacementGroup resource are going to be updated.
  google.protobuf.FieldMask update_mask = 2;

  // Name of the placement group.
  string name = 3 [(pattern) = "|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?"];

  // Description of the placement group.
  string description = 4 [(length) = "<=256"];

  // Resource labels as `key:value` pairs.
  //
  // The existing set of `labels` is completely replaced by the provided set.
  map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];
}

message UpdateDiskPlacementGroupMetadata {
  // ID of the placement group that is being updated.
  string disk_placement_group_id = 1;
}

message DeleteDiskPlacementGroupRequest {
  // ID of the placement group to delete.
  // To get the placement group ID, use [DiskPlacementGroupService.List] request.
  string disk_placement_group_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteDiskPlacementGroupMetadata {
  // ID of the placement group that is being deleted.
  string disk_placement_group_id = 1;
}

message ListDiskPlacementGroupDisksRequest {
  // ID of the placement group to list disks for.
  // To get the placement group ID, use [DiskPlacementGroupService.List] request.
  string disk_placement_group_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListDiskPlacementGroupDisksResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results,
  // set [page_token] to the [ListDiskPlacementGroupDisksResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListDiskPlacementGroupDisksResponse {
  // Lists disks for the specified placement group.
  repeated Disk disks = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is more than [ListDiskPlacementGroupDisksRequest.page_size], use
  // [next_page_token] as the value
  // for the [ListDiskPlacementGroupDisksRequest.page_token] query parameter
  // in the next list request. Each subsequent list request will have its own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message ListDiskPlacementGroupOperationsRequest {
  // ID of the placement group to list operations for.
  // To get the placement group ID, use [DiskPlacementGroupService.List] request.
  string disk_placement_group_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListDiskPlacementGroupOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListDiskPlacementGroupOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListDiskPlacementGroupOperationsResponse {
  // List of operations for the specified placement group.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListDiskPlacementGroupOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListDiskPlacementGroupOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}
