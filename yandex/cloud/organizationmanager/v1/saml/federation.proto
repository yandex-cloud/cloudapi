syntax = "proto3";

package yandex.cloud.organizationmanager.v1.saml;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/organizationmanager/v1/saml;saml";
option java_package = "yandex.cloud.api.organizationmanager.v1.saml";

// A federation.
// For more information, see [SAML-compatible identity federations](/docs/iam/concepts/federations).
message Federation {

  // ID of the federation.
  string id = 1 [(required) = true, (length) = "<=50"];

  // ID of the organization that the federation belongs to.
  string organization_id = 2;

  // Name of the federation.
  string name = 3 [(required) = true, (pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];

  // Description of the federation.
  string description = 4 [(length) = "<=256"];

  // Creation timestamp.
  google.protobuf.Timestamp created_at = 5;

  // Browser cookie lifetime in seconds.
  // If the cookie is still valid, the management console
  // authenticates the user immediately and redirects them to the home page.
  google.protobuf.Duration cookie_max_age = 6 [(value) = "10m-12h"];

  // Add new users automatically on successful authentication.
  // The user becomes member of the organization automatically,
  // but you need to grant other roles to them.
  //
  // If the value is `false`, users who aren't added to the organization
  // can't log in, even if they have authenticated on your server.
  bool auto_create_account_on_login = 7;

  // ID of the IdP server to be used for authentication.
  // The IdP server also responds to IAM with this ID after the user authenticates.
  string issuer = 8 [(required) = true, (length) = "<=8000"];

  // Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type.
  //
  // SAML Binding is a mapping of a SAML protocol message onto standard messaging
  // formats and/or communications protocols.
  BindingType sso_binding = 9;

  // Single sign-on endpoint URL.
  // Specify the link to the IdP login page here.
  string sso_url = 10 [(required) = true, (length) = "<=8000"];

  // Federation security settings.
  FederationSecuritySettings security_settings = 11;

  // Use case insensitive Name IDs.
  bool case_insensitive_name_ids = 12;

  // Resource labels as `` key:value `` pairs. Maximum of 64 per resource.
  map<string, string> labels = 13;
}

enum BindingType {
  BINDING_TYPE_UNSPECIFIED = 0;

  // HTTP POST binding.
  POST = 1;

  // HTTP redirect binding.
  REDIRECT = 2;

  // HTTP artifact binding.
  ARTIFACT = 3;

}

// Federation security settings.
message FederationSecuritySettings {
  // Enable encrypted assertions.
  bool encrypted_assertions = 1;

  // Value parameter ForceAuthn in SAMLRequest.
  bool force_authn = 2;
}

// A domain.
message Domain {

  // Status of the domain.
  enum Status {

    STATUS_UNSPECIFIED = 0;

    // Domain requires ownership validation.
    NEED_TO_VALIDATE = 1;

    // Domain validation is in progress.
    VALIDATING = 2;

    // Domain has been successfully validated and is active.
    VALID = 3;

    // Domain validation failed (check status_code for details).
    INVALID = 4;

    // Domain is being deleted.
    DELETING = 5;

  }

  // Domain name
  string domain = 1;

  // Current status of the domain.
  Status status = 2;

  // Optional code providing details about validation errors.
  string status_code = 3;

  // Timestamp of domain creation.
  google.protobuf.Timestamp created_at = 4;

  // Timestamp when the domain was successfully validated.
  // Not set if validation hasn't been completed.
  google.protobuf.Timestamp validated_at = 5;

  // List of challenges to confirm domain ownership.
  repeated DomainChallenge challenges = 6;
}

// A domain validation challenge.
message DomainChallenge {

  // Type of validation challenge.
  enum Type {

    TYPE_UNSPECIFIED = 0;

    // DNS TXT record validation method.
    DNS_TXT = 1;

  }

  // Status of the validation challenge.
  enum Status {

    STATUS_UNSPECIFIED = 0;

    // Challenge is awaiting completion.
    PENDING = 1;

    // Challenge verification is in progress.
    PROCESSING = 2;

    // Challenge has been completed successfully.
    VALID = 3;

    // Challenge verification failed.
    INVALID = 4;

  }

  // Timestamp of challenge creation.
  google.protobuf.Timestamp created_at = 1;

  // Timestamp of the last challenge status update.
  google.protobuf.Timestamp updated_at = 2;

  // Type of the validation challenge.
  Type type = 3;

  // Current status of the challenge.
  Status status = 4;

  // Validation challenge payload. Currently supports only DNS records.
  oneof challenge {
    // DNS record configuration for domain verification.
    DnsRecord dns_challenge = 5;
  }

  // DNS record data for validation challenges.
  message DnsRecord {

    // Type of DNS record.
    enum Type {

      TYPE_UNSPECIFIED = 0;

      // TXT record type.
      TXT = 1;

    }

    // Fully qualified domain name for the record.
    string name = 1;

    // DNS record type (always TXT for current implementation).
    Type type = 2;

    // Value to set in the DNS record for verification.
    string value = 3;
  }
}
