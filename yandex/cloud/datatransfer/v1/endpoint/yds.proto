syntax = "proto3";

package yandex.cloud.datatransfer.v1.endpoint;

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/datatransfer/v1/endpoint;endpoint";
option java_package = "yandex.cloud.api.datatransfer.v1.endpoint";
option csharp_namespace = "Yandex.Cloud.Datatransfer.V1.EndPoint"; // there is a clash with class Endpoint in namespace Yandex.Cloud.Datatransfer.V1

import "yandex/cloud/datatransfer/v1/endpoint/parsers.proto";
import "yandex/cloud/datatransfer/v1/endpoint/serializers.proto";

enum YdsCompressionCodec {
    YDS_COMPRESSION_CODEC_UNSPECIFIED = 0;
    YDS_COMPRESSION_CODEC_RAW = 1;
    YDS_COMPRESSION_CODEC_GZIP = 2;
    YDS_COMPRESSION_CODEC_ZSTD = 4;
}
message YDSSource {
    reserved 3 to 7, 12 to 19, 21 to 29, 31 to 33;
    // Database
    string database = 1;
    // Stream
    string stream = 2;
    // SA which has read access to the stream.
    string service_account_id = 8;
    // Compression codec
    repeated YdsCompressionCodec supported_codecs = 9;
    // Data parsing rules
    Parser parser = 10;
    // Should continue working, if consumer read lag exceed TTL of topic
    // False: stop the transfer in error state, if detected lost data. True: continue
    // working with losing part of data
    bool allow_ttl_rewind = 11;
    // for dedicated db
    string endpoint = 20;
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 30;
    // Security groups
    repeated string security_groups = 34;
    // for important streams
    string consumer = 35;
}
message YDSTarget {
    reserved 6 to 7, 9 to 19, 21 to 29, 31 to 33;
    // Database
    string database = 1;
    // Stream
    string stream = 2;
    // SA which has read access to the stream.
    string service_account_id = 3;
    // Save transaction order
    // Not to split events queue into separate per-table queues.
    // Incompatible with setting Topic prefix, only with Topic full name.
    bool save_tx_order = 4;
    YdsCompressionCodec compression_codec = 5;
    // Data serialization format
    Serializer serializer = 8;
    // for dedicated db
    string endpoint = 20;
    // Network interface for endpoint. If none will assume public ipv4
    string subnet_id = 30;
    // Security groups
    repeated string security_groups = 34;
}
