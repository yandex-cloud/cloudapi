syntax = "proto3";

package yandex.cloud.quotamanager.v1;

import "google/api/annotations.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/quotamanager/v1/quota_request.proto";
import "yandex/cloud/quotamanager/v1/resource.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/quotamanager/v1;quotamanager";
option java_package = "yandex.cloud.api.quotamanager.v1";

// A set of methods for managing quota requests.
service QuotaRequestService {
  // Returns the specified quota request.
  rpc Get (GetQuotaRequestRequest) returns (QuotaRequest) {
    option (google.api.http) = {get: "/quota-manager/v1/quotaRequests/{quota_request_id}"};
  }

  // Creates a quota request in the specified resource.
  rpc Create(CreateQuotaRequestRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/quota-manager/v1/quotaRequests" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateQuotaRequestMetadata"
      response: "QuotaRequest"
    };
  }

  // Cancels quotas in the specified quota request.
  rpc Cancel(CancelQuotaRequestRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/quota-manager/v1/quotaRequests/{quota_request_id}/cancel" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CancelQuotaRequestMetadata"
      response: "QuotaRequest"
    };
  }

  // Retrieves the list of quota requests in the specified resource.
  rpc List(ListQuotaRequestRequest) returns (ListQuotaRequestResponse) {
    option (google.api.http) = {get: "/quota-manager/v1/quotaRequests"};
  }

  // Lists operations for the specified quota request.
  rpc ListOperations(ListQuotaRequestOperationsRequest) returns (ListQuotaRequestOperationsResponse) {
    option (google.api.http) = {get: "/quota-manager/v1/quotaRequests/{quota_request_id}/operations"};
  }

}

message GetQuotaRequestRequest {
  // ID of the quota request to return.
  string quota_request_id = 1 [(required) = true, (length) = "<=50"];
}

message CreateQuotaRequestRequest {
  // Resource to create a quota request in.
  Resource resource = 1 [(required) = true];

  // Desired quota limits
  repeated DesiredQuotaLimit desired_quota_limits = 2 [(size) = "1-100"];

  message DesiredQuotaLimit {
    // ID of the quota
    string quota_id = 1 [(required) = true, (length) = "<=64"];

    // Desired limit of the quota
    double desired_limit = 2 [(value) = "0-9223372036854775807"];
  }
}

message CreateQuotaRequestMetadata {
  // ID of the quota request that is being created.
  string quota_request_id = 1;
}

message CancelQuotaRequestRequest {
  // ID of the quota request to update.
  string quota_request_id = 1 [(required) = true, (length) = "<=50"];

  // Quota IDs that is being canceled.
  repeated string quota_ids = 2 [(size) = "1-1000", (length) = "<=64"];
}

message CancelQuotaRequestMetadata {
  // ID of the quota request that is being updated.
  string quota_request_id = 1;
}

message ListQuotaRequestRequest {
  // Resource to list quota requests in.
  Resource resource = 1 [(required) = true];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can use filtering only on the [quotaRequest.status] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
  string filter = 2 [(length) = "<=1000"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListQuotaRequestsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100
  int64 page_size = 3 [(value) = "0-1000"];

  // Page token. To get the next page of results, set [page_token]
  // to the [ListQuotaRequestsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 4 [(length) = "<=100"];
}

message ListQuotaRequestResponse {
  // List of quota requests.
  repeated QuotaRequest quota_requests = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListQuotaRequestsRequest.page_size], use
  // the [next_page_token] as the value
  // for the [ListQuotaRequestsRequest.page_token] query parameter
  // in the next list request. Each subsequent list request will have its own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message ListQuotaRequestOperationsRequest {
  // ID of the quota request to list operations for.
  string quota_request_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListQuotaRequestOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. To get the next page of results, set [page_token]
  // to the [ListQuotaRequestOperationsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListQuotaRequestOperationsResponse {
  // List of operations for the specified quota request.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListQuotaRequestOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListQuotaRequestOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}
