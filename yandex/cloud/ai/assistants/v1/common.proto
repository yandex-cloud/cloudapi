syntax = "proto3";

package yandex.cloud.ai.assistants.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1;assistants";
option java_package = "yandex.cloud.api.ai.assistants.v1";

// Defines the options for truncating thread messages within a prompt.
message PromptTruncationOptions {
  // Auto truncation strategy.
  message AutoStrategy {
    // No specific parameters are required for this strategy.
    // The system will handle truncation in a way that aims to preserve the most relevant context.
  }

  // Truncates the prompt by retaining only the last `num_messages` messages in the thread.
  message LastMessagesStrategy {
    // The number of most recent messages to retain in the prompt.
    // If these messages exceed `max_prompt_tokens`, older messages will be further truncated to fit the limit.
    int64 num_messages = 1;
  }

  // The maximum number of tokens allowed in the prompt.
  // If the prompt exceeds this limit, the thread messages will be truncated.
  // Default max_prompt_tokens: 7000
  google.protobuf.Int64Value max_prompt_tokens = 1;

  // Specifies the truncation strategy to use when the prompt exceeds the token limit.
  oneof TruncationStrategy {
    AutoStrategy auto_strategy = 2;

    // Retains only the last `num_messages` messages in the thread.
    // If these messages exceed `max_prompt_tokens`, older messages will be further truncated to fit the limit.
    LastMessagesStrategy last_messages_strategy = 3;
  }
}

// Defines the options for completion generation.
message CompletionOptions {
  // The limit on the number of tokens used for single completion generation.
  // Must be greater than zero. This maximum allowed parameter value may depend on the model being used.
  google.protobuf.Int64Value max_tokens = 2;

  // Affects creativity and randomness of responses. Should be a double number between 0 (inclusive) and 1 (inclusive).
  // Lower values produce more straightforward responses while higher values lead to increased creativity and randomness.
  // Default temperature: 0.3
  google.protobuf.DoubleValue temperature = 3;
}

// Represents a general tool that can be one of several types.
message Tool {
  oneof ToolType {
    // SearchIndexTool tool that performs search across specified indexes.
    SearchIndexTool search_index = 1;

    // Function tool that can be invoked by the assistant.
    FunctionTool function = 2;

    // Performs web retrieval and generative synthesis.
    GenSearchTool gen_search = 3;
  }
}

// Represents a call to a tool.
message ToolCall {
  oneof ToolCallType {
    // Represents a call to a function.
    FunctionCall function_call = 1;
  }
}

// Represents a list of tool calls.
message ToolCallList {
  // A list of tool calls to be executed.
  repeated ToolCall tool_calls = 1;
}

// Represents the result of a tool call.
message ToolResult {
  oneof ToolResultType {
    // Represents the result of a function call.
    FunctionResult function_result = 1;
  }
}

// Represents a list of tool results.
message ToolResultList {
  // A list of tool results.
  repeated ToolResult tool_results = 1;
}

// Configures a tool that enables Retrieval-Augmented Generation (RAG) by allowing the assistant to search across a specified search index.
message SearchIndexTool {
  // A list of search index IDs that this tool will query. Currently, only a single index ID is supported.
  repeated string search_index_ids = 1;

  // The maximum number of results to return from the search.
  // Fewer results may be returned if necessary to fit within the prompt's token limit.
  // This ensures that the combined prompt and search results do not exceed the token constraints.
  google.protobuf.Int64Value max_num_results = 2;

  // Options for rephrasing user queries.
  // Used to rewrite the last user message for search,
  // incorporating context from the previous conversation.
  RephraserOptions rephraser_options = 3;

  // Defines the strategy for triggering search.
  // Controls whether search results are always included or returned only when
  // the model explicitly calls the tool.
  CallStrategy call_strategy = 4;
}

// Defines when the assistant uses the search tool.
message CallStrategy {
  // Always includes retrieved search results in the prompt.
  message AlwaysCall {}

  // Exposes the tool as a callable function.
  // The model decides when to trigger search based on the instruction.
  message AutoCall {
    // The name of the tool as exposed to the model.
    string name = 1;

    // Required instruction that helps the model decide when to call the tool.
    string instruction = 2 [(required) = true];
  }

  // One of `always_call` or `auto_call`.
  // always_call is used if no strategy is explicitly set
  oneof Strategy {
    AlwaysCall always_call = 1;
    AutoCall auto_call = 2;
  }
}

// Represents a function tool that can be invoked by the assistant.
message FunctionTool {
  // The name of the function.
  string name = 1;
  // A description of the function's purpose or behavior.
  string description = 2;
  // A JSON Schema that defines the expected parameters for the function.
  // The schema should describe the required fields, their types, and any constraints or default values.
  google.protobuf.Struct parameters = 3;
}

// Represents the invocation of a function with specific arguments.
message FunctionCall {
  // The name of the function being called.
  string name = 1;
  // The structured arguments passed to the function.
  // These arguments must adhere to the JSON Schema defined in the corresponding function's parameters.
  google.protobuf.Struct arguments = 2;
}

// Represents the result of a function call.
message FunctionResult {
  // The name of the function that was executed.
  string name = 1;
  oneof ContentType {
    // The result of the function call, represented as a string.
    // This field can be used to store the output of the function.
    string content = 2;
  }
}

// Options for configuring the rephrasing the last user message for search using context from previous conversation.
message RephraserOptions {
  // The ID of the model used to rephrase the last user message for search.
  string rephraser_uri = 1 [(required) = true];
}

// Represents the expected structure of the model's response using a JSON Schema.
message JsonSchema {
  // The JSON Schema that the model's output must conform to.
  google.protobuf.Struct schema = 1;
}

// Specifies the format of the model's response.
message ResponseFormat {
  oneof ResponseFormat {
    // When set to true, the model will respond with a valid JSON object.
    // Be sure to explicitly ask the model for JSON.
    // Otherwise, it may generate excessive whitespace and run indefinitely until it reaches the token limit.
    bool json_object = 1;

    // Enforces a specific JSON structure for the model's response based on a provided schema.
    JsonSchema json_schema = 2;
  }
}

message GenSearchTool {
  // Scoping and filtering rules for the search query
  GenSearchOptions options = 1;

  // description of the purpose
  string description = 2 [(required) = true];
}

message GenSearchOptions {
  // Restricts the search to the specific websites.
  message SiteOption {
    repeated string site = 1 [(length) = "<=1024", (size) = "<=100"];
  }

  // Restricts the search to the specific pages.
  message UrlOption {
    repeated string url = 1 [(length) = "<=1024", (size) = "<=100"];
  }

  // Restricts the search to the specific hosts.
  message HostOption {
    repeated string host = 1 [(length) = "<=1024", (size) = "<=100"];
  }

  message SearchFilter {
    enum DocFormat {
      DOC_FORMAT_UNSPECIFIED = 0;
      DOC_FORMAT_PDF = 1;
      DOC_FORMAT_XLS = 2;
      DOC_FORMAT_ODS = 3;
      DOC_FORMAT_RTF = 4;
      DOC_FORMAT_PPT = 5;
      DOC_FORMAT_ODP = 6;
      DOC_FORMAT_SWF = 7;
      DOC_FORMAT_ODT = 8;
      DOC_FORMAT_ODG = 9;
      DOC_FORMAT_DOC = 10;
    }

    // Includes only one of the fields date, lang, format.
    oneof filter_options {
      // Restrict by document date
      string date = 1 [(length) = "<=25"];
      // Restrict by document language. Use ISO 639-1 language codes.
      string lang = 2 [(length) = "2"];
      // Restrict by document format.
      DocFormat format = 3;
    }
  }

  // Restricts the search to the specific websites, hosts or pages.
  // Includes only one of the fields site, host, url.
  oneof site_options {
    SiteOption site = 1;
    HostOption host = 2;
    UrlOption url = 3;
  }
  // Use the documents inaccessible from the front page.
  bool enable_nrfm_docs = 4;
  // Restricts the search by date, document formats or language.
  repeated SearchFilter search_filters = 5 [(size) = "<=10"];
}
