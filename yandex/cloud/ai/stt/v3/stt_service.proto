syntax = "proto3";

package speechkit.stt.v3;

import "yandex/cloud/ai/stt/v3/stt.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/stt/v3;stt";
option java_package = "yandex.cloud.api.ai.stt.v3";

// A set of methods for streaming speech recognition.
service Recognizer {

    // Performs bidirectional streaming speech recognition receiving results while sending audio.
    rpc RecognizeStreaming (stream StreamingRequest) returns (stream StreamingResponse) {

    }

}

message GetRecognitionRequest {
    string operation_id = 1 [(yandex.cloud.required) = true, (yandex.cloud.length) = "<=50"];
}

// A set of methods for asynchronous speech recognition: recognize pre-recorded audio and receive results by request.
service AsyncRecognizer {

    // Performs asynchronous speech recognition.
    rpc RecognizeFile (RecognizeFileRequest) returns (yandex.cloud.operation.Operation) {
        option (yandex.cloud.api.operation) = {
            response: "google.protobuf.Empty"
        };
        option (google.api.http) = { post: "/stt/v3/recognizeFileAsync" body: "*" };
    }

    // Gets results of asynchronous recognition after finishing the operation.
    rpc GetRecognition(GetRecognitionRequest) returns (stream StreamingResponse) {
        option (google.api.http) = { get: "/stt/v3/getRecognition"};
    }

    // Deletes results of asynchronous recognition by operation ID.
    rpc DeleteRecognition(DeleteRecognitionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/stt/v3/deleteRecognition"};
    }

}
