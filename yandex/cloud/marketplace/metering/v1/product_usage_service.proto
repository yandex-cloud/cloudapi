syntax = "proto3";

package yandex.cloud.marketplace.metering.v1;

import "google/api/annotations.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/marketplace/metering/v1/usage_record.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/marketplace/metering/v1;metering";
option java_package = "yandex.cloud.api.marketplace.metering.v1";

service ProductUsageService {

    // Writes product's usage (authenticated by publisher's service account)
    rpc Write (WriteUsageRequest) returns (WriteUsageResponse) {
        option (google.api.http) = {post: "/marketplace/metering/v1/productUsage/write" body: "*"};
    }

}

message WriteUsageRequest {
    // Do not write usage, only validate
    bool dry_run = 1;
    // Marketplace Product Instance's ID
    string product_instance_id = 2 [(required) = true, (length) = "<=50"];
    // List of product usage records (up to 25 per request)
    repeated UsageRecord usage_records = 3 [(size) = "1-25"];
}

message WriteUsageResponse {
    // List of accepted product usage records
    repeated AcceptedUsageRecord accepted = 1;
    // List of rejected product usage records (with reason)
    repeated RejectedUsageRecord rejected = 2;
}
