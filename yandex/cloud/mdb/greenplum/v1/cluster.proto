syntax = "proto3";

package yandex.cloud.mdb.greenplum.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/type/timeofday.proto";
import "yandex/cloud/mdb/greenplum/v1/config.proto";
import "yandex/cloud/mdb/greenplum/v1/maintenance.proto";
import "yandex/cloud/mdb/greenplum/v1/pxf.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/greenplum/v1;greenplum";
option java_package = "yandex.cloud.api.mdb.greenplum.v1";

// A Greenplum® cluster resource.
message Cluster {
  reserved 25;
  enum Environment {
    ENVIRONMENT_UNSPECIFIED = 0;

    // Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
    PRODUCTION = 1;

    // Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
    PRESTABLE = 2;
  }

  enum Health {

    // Health of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
    HEALTH_UNKNOWN = 0;

    // Cluster is working normally ([Host.health] for every host in the cluster is ALIVE).
    ALIVE = 1;

    // Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
    DEAD = 2;

    // Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
    DEGRADED = 3;

    // Cluster is working below capacity ([Host.health] for at least one host in the cluster is UNBALANCED).
    UNBALANCED = 4;
  }

  // Current state of the cluster.

  enum Status {

    // Cluster state is unknown.
    STATUS_UNKNOWN = 0;

    // Cluster is being created.
    CREATING = 1;

    // Cluster is running normally.
    RUNNING = 2;

    // Cluster has encountered a problem and cannot operate.
    ERROR = 3;

    // Cluster is being updated.
    UPDATING = 4;

    // Cluster is stopping.
    STOPPING = 5;

    // Cluster has stopped.
    STOPPED = 6;

    // Cluster is starting.
    STARTING = 7;
  }

  // ID of the Greenplum® cluster.
  // This ID is assigned by the platform at the moment of cluster creation.
  string id = 1;

  // ID of the folder that the Greenplum® cluster belongs to.
  string folder_id = 2;

  // Time when the cluster was created.
  google.protobuf.Timestamp created_at = 3;

  // Name of the Greenplum® cluster.
  // The name is unique within the folder.
  string name = 4 [
    (required) = true,
    (length) = "<=63"
  ];

  // Greenplum® cluster configuration.
  GreenplumConfig config = 5;

  // Description of the Greenplum® cluster.
  string description = 6 [(length) = "<=256"];

  // Custom labels for the Greenplum® cluster as `key:value` pairs. Maximum 64 labels per resource.
  map<string, string> labels = 7;

  // Deployment environment of the Greenplum® cluster.
  Environment environment = 8;

  // Description of monitoring systems relevant to the Greenplum® cluster.
  repeated Monitoring monitoring = 9;

  // Configuration of the Greenplum® master subcluster.
  MasterSubclusterConfig master_config = 10;

  // Configuration of the Greenplum® segment subcluster.
  SegmentSubclusterConfig segment_config = 11;

  // Number of hosts in the master subcluster.
  int64 master_host_count = 12;

  // Number of hosts in the segment subcluster.
  int64 segment_host_count = 13;

  // Number of segments per host.
  int64 segment_in_host = 14;

  // ID of the cloud network that the cluster belongs to.
  string network_id = 15;

  // Aggregated cluster health.
  Health health = 16;

  // Current state of the cluster.
  Status status = 17;

  // A Greenplum® cluster maintenance window. Should be defined by either one of the two options.
  MaintenanceWindow maintenance_window = 18;

  // Maintenance operation planned at nearest [maintenance_window].
  MaintenanceOperation planned_operation = 19;

  // User security groups.
  repeated string security_group_ids = 20;

  // Owner user name.
  string user_name = 21;

  // Determines whether the cluster is protected from being deleted.
  bool deletion_protection = 22;

  // Host groups hosting VMs of the cluster.
  repeated string host_group_ids = 23;

  // Greenplum® and Odyssey® configuration.
  ClusterConfigSet cluster_config = 24;

  // Cloud storage settings
  CloudStorage cloud_storage = 26;

  // Host groups hosting VMs of the master subcluster.
  repeated string master_host_group_ids = 27;

  // Host groups hosting VMs of the segment subcluster.
  repeated string segment_host_group_ids = 28;

  // Service account that will be used to access a Yandex Cloud resources
  string service_account_id = 29;

  // Cloud logging configuration
  LoggingConfig logging = 30;
}

message ClusterConfigSet {
  reserved 7;
  oneof greenplum_config {
    GreenplumConfigSet6_17 greenplum_config_set_6_17 = 1 [json_name = "greenplumConfigSet_6_17"];
    GreenplumConfigSet6_19 greenplum_config_set_6_19 = 2 [json_name = "greenplumConfigSet_6_19"];
    GreenplumConfigSet6_21 greenplum_config_set_6_21 = 4 [json_name = "greenplumConfigSet_6_21"];
    GreenplumConfigSet6_22 greenplum_config_set_6_22 = 5 [json_name = "greenplumConfigSet_6_22"];
    GreenplumConfigSet6 greenplum_config_set_6 = 9 [json_name = "greenplumConfigSet_6"];
  }

  // Odyssey® pool settings.
  ConnectionPoolerConfigSet pool = 3;

  // Managed Greenplum® background tasks configuration.
  BackgroundActivitiesConfig background_activities = 6;

  PXFConfigSet pxf_config = 8;
}

// Monitoring system metadata.
message Monitoring {
  // Name of the monitoring system.
  string name = 1;

  // Description of the monitoring system.
  string description = 2;

  // Link to the monitoring system charts for the Greenplum® cluster.
  string link = 3;
}

// Greenplum® cluster configuration.

message GreenplumConfig {
  reserved 7 to 8;

  // Version of the Greenplum® server software.
  string version = 1;

  // Time to start the daily backup, in the UTC timezone.
  google.type.TimeOfDay backup_window_start = 2;

  // Retention policy of automated backups.
  google.protobuf.Int64Value backup_retain_period_days = 9 [(value) = "1-60"];

  // Access policy for external services.
  Access access = 3;

  // ID of the availability zone the cluster belongs to.
  // To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request.
  string zone_id = 4 [(length) = "<=50"];

  // ID of the subnet the cluster belongs to. This subnet should be a part of the cloud network the cluster belongs to (see [Cluster.network_id]).
  string subnet_id = 5 [(length) = "<=50"];

  // Determines whether the cluster has a public IP address.
  //
  // After the cluster has been created, this setting cannot be changed.
  bool assign_public_ip = 6;
}

// Greenplum® cluster access options.

message Access {
  // Allows data export from the cluster to DataLens.
  bool data_lens = 1;

  // Allows SQL queries to the cluster databases from the management console.
  bool web_sql = 2;

  // Allows access for DataTransfer.
  bool data_transfer = 3;

  reserved 4;

  // Allow access for YandexQuery.
  bool yandex_query = 5;
}

message GreenplumRestoreConfig {
  // Time to start the daily backup, in the UTC timezone.
  google.type.TimeOfDay backup_window_start = 1;

  // Access policy for external services.
  Access access = 2;

  // ID of the availability zone where the host resides.
  //
  // To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request.
  string zone_id = 3 [(length) = "<=50"];

  // ID of the subnet that the host should belong to. This subnet should be a part of the network that the cluster belongs to.
  // The ID of the network is set in the field [Cluster.network_id].
  string subnet_id = 4 [(length) = "<=50"];

  // Determines whether the host should get a public IP address on creation.
  //
  // After a host has been created, this setting cannot be changed.
  //
  // To remove an assigned public IP, or to assign a public IP to a host without one, recreate the host with [assign_public_ip] set as needed.
  //
  // Possible values:
  // * `false` - do not assign a public IP to the master host.
  // * `true` - assign a public IP to the master host.
  bool assign_public_ip = 5;
}

message RestoreResources {
  // ID of the preset for computational resources available to a host (CPU, memory, etc.).
  string resource_preset_id = 1;

  // Volume of the storage available to a host.
  int64 disk_size = 2;
}

// Cloud Storage Settings
message CloudStorage {
  // enable Cloud Storage for cluster
  bool enable = 1;
}

message LoggingConfig {
  bool enabled = 1;

  oneof destination {
    string folder_id = 2 [(pattern) = "([a-zA-Z][-a-zA-Z0-9_.]{0,63})?"];
    string log_group_id = 3 [(pattern) = "([a-zA-Z][-a-zA-Z0-9_.]{0,63})?"];
  }

  reserved 4;

  // send Yandex Command Center logs
  bool command_center_enabled = 5;
  // send Greenplum logs
  bool greenplum_enabled = 6;
  // send Pooler logs
  bool pooler_enabled = 7;
}
