syntax = "proto3";

package yandex.cloud.mdb.postgresql.v1;

import "google/api/annotations.proto";
import "yandex/cloud/mdb/postgresql/v1/backup_retention_policy.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1;postgresql";
option java_package = "yandex.cloud.api.mdb.postgresql.v1";

// A set of methods for managing PostgreSQL Cluster backup retention policies.
service BackupRetentionPolicyService {
  // List all retention policies.
  rpc List (ListBackupRetentionPoliciesRequest) returns (ListBackupRetentionPoliciesResponse) {
    option (google.api.http) = { get: "/managed-postgresql/v1/clusters/{cluster_id}/retention_policies" };
  }

  // Add a new retention policy.
  rpc Create(CreateBackupRetentionPolicyRequest) returns (CreateBackupRetentionPolicyResponse) {
    option (google.api.http) = { post: "/managed-postgresql/v1/clusters/{cluster_id}/retention_policies" body: "*" };
  }

  // Delete retention policy.
  rpc Delete(DeleteBackupRetentionPolicyRequest) returns (DeleteBackupRetentionPolicyResponse) {
    option (google.api.http) = {
      delete: "/managed-postgresql/v1/clusters/{cluster_id}/retention_policies/{policy_id}"
    };
  }
}

message ListBackupRetentionPoliciesRequest {
  // ID of the PostgreSQL cluster.
  // To get the PostgreSQL cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListBackupRetentionPoliciesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token]
  // to the [ListBackupRetentionPoliciesResponse.next_page_token] returned by the previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListBackupRetentionPoliciesResponse {
  // List of [BackupRetentionPolicy] associated with the cluster.
  repeated BackupRetentionPolicy policies = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListBackupRetentionPoliciesRequest.page_size], use the [next_page_token] as the value
  // for the [ListBackupRetentionPoliciesRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateBackupRetentionPolicyRequest {
  // ID of the PostgreSQL cluster.
  // To get the PostgreSQL cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // CronTab schedule.
  CronTab cron = 2;

  // Retention duration.
  int64 retain_for_days = 3;

  // Policy description.
  string description = 4;

  // Required. Policy name.
  string policy_name = 5 [(required) = true];
}

message CreateBackupRetentionPolicyResponse {
  // Newly created [BackupRetentionPolicy].
  BackupRetentionPolicy policy = 1;
}

message DeleteBackupRetentionPolicyRequest {
  // Unique identifier for the [BackupRetentionPolicy].
  string policy_id = 1;

  // ID of the PostgreSQL cluster.
  // To get the PostgreSQL cluster ID use a [ClusterService.List] request.
  string cluster_id = 2 [(required) = true, (length) = "<=50"];
}

message DeleteBackupRetentionPolicyResponse {}
