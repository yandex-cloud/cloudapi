syntax = "proto3";

package yandex.cloud.mdb.mysql.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/type/timeofday.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/mdb/mysql/v1/backup.proto";
import "yandex/cloud/mdb/mysql/v1/cluster.proto";
import "yandex/cloud/mdb/mysql/v1/config/mysql5_7.proto";
import "yandex/cloud/mdb/mysql/v1/config/mysql8_0.proto";
import "yandex/cloud/mdb/mysql/v1/database.proto";
import "yandex/cloud/mdb/mysql/v1/maintenance.proto";
import "yandex/cloud/mdb/mysql/v1/user.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/mysql/v1;mysql";
option java_package = "yandex.cloud.api.mdb.mysql.v1";

// A set of methods for managing MySQL clusters.
service ClusterService {
  // Retrieves information about a cluster.
  rpc Get(GetClusterRequest) returns (Cluster) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters/{cluster_id}"};
  }

  // Retrieves the list of clusters in a folder.
  rpc List(ListClustersRequest) returns (ListClustersResponse) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters"};
  }

  // Creates a cluster in a folder.
  rpc Create(CreateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateClusterMetadata"
      response: "Cluster"
    };
  }

  // Updates a cluster.
  rpc Update(UpdateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {
      patch: "/managed-mysql/v1/clusters/{cluster_id}"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateClusterMetadata"
      response: "Cluster"
    };
  }

  // Deletes a cluster.
  rpc Delete(DeleteClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/managed-mysql/v1/clusters/{cluster_id}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteClusterMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Starts a cluster.
  rpc Start(StartClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-mysql/v1/clusters/{cluster_id}:start"};
    option (yandex.cloud.api.operation) = {
      metadata: "StartClusterMetadata"
      response: "Cluster"
    };
  }

  // Stops a cluster.
  rpc Stop(StopClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-mysql/v1/clusters/{cluster_id}:stop"};
    option (yandex.cloud.api.operation) = {
      metadata: "StopClusterMetadata"
      response: "Cluster"
    };
  }

  // Moves a cluster to a folder.
  rpc Move(MoveClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters/{cluster_id}:move"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "MoveClusterMetadata"
      response: "Cluster"
    };
  }

  // Creates a backup for a cluster.
  //
  // To get information about a backup, make a [BackupService.Get] request.
  rpc Backup(BackupClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-mysql/v1/clusters/{cluster_id}:backup"};
    option (yandex.cloud.api.operation) = {
      metadata: "BackupClusterMetadata"
      response: "Cluster"
    };
  }

  // Restores a backup to a new cluster.
  //
  // See [the documentation](/docs/managed-mysql/concepts/backup) for details.
  rpc Restore(RestoreClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters:restore"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "RestoreClusterMetadata"
      response: "Cluster"
    };
  }

  // Reschedules planned maintenance operation.
  rpc RescheduleMaintenance(RescheduleMaintenanceRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters/{cluster_id}:rescheduleMaintenance"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "RescheduleMaintenanceMetadata"
      response: "Cluster"
    };
  }

  // Starts a manual failover for a cluster.
  rpc StartFailover(StartClusterFailoverRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters/{cluster_id}:startFailover"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "StartClusterFailoverMetadata"
      response: "Cluster"
    };
  }

  // Retrieves logs for a cluster.
  //
  // Alternatively, logs can be streamed using [StreamLogs].
  rpc ListLogs(ListClusterLogsRequest) returns (ListClusterLogsResponse) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters/{cluster_id}:logs"};
  }

  // Retrieves a log stream for a cluster.
  //
  // This method is similar to [ListLogs], but uses server-side streaming, which allows for the `tail -f` command semantics.
  rpc StreamLogs(StreamClusterLogsRequest) returns (stream StreamLogRecord) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters/{cluster_id}:stream_logs"};
  }

  // Retrieves a list of operations for a cluster.
  rpc ListOperations(ListClusterOperationsRequest) returns (ListClusterOperationsResponse) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters/{cluster_id}/operations"};
  }

  // Retrieves a list of backups for a cluster.
  //
  // To list all backups in a folder, make a [BackupService.List] request.
  rpc ListBackups(ListClusterBackupsRequest) returns (ListClusterBackupsResponse) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters/{cluster_id}/backups"};
  }

  // Retrieves a list of hosts for a cluster.
  rpc ListHosts(ListClusterHostsRequest) returns (ListClusterHostsResponse) {
    option (google.api.http) = {get: "/managed-mysql/v1/clusters/{cluster_id}/hosts"};
  }

  // Adds new hosts in a cluster.
  rpc AddHosts(AddClusterHostsRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters/{cluster_id}/hosts:batchCreate"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "AddClusterHostsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Updates the specified hosts.
  rpc UpdateHosts(UpdateClusterHostsRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters/{cluster_id}/hosts:batchUpdate"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateClusterHostsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Deletes the specified hosts for a cluster.
  rpc DeleteHosts(DeleteClusterHostsRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-mysql/v1/clusters/{cluster_id}/hosts:batchDelete"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteClusterHostsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetClusterRequest {
  // ID of the cluster to return information about.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message ListClustersRequest {
  // ID of the folder to list clusters in.
  //
  // To get this ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // The maximum number of results per page to return.
  //
  // If the number of available results is larger than [page_size], the API returns a [ListClustersResponse.next_page_token] that can be used to get the next page of results in the subsequent [ClusterService.List] requests.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token that can be used to iterate through multiple pages of results.
  //
  // To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token] returned by the previous [ClusterService.List] request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that selects clusters listed in the response.
  //
  // The expression must specify:
  // 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.
  string filter = 4 [(length) = "<=1000"];
}

message ListClustersResponse {
  // List of clusters.
  repeated Cluster clusters = 1;

  // The token that can be used to get the next page of results.
  //
  // If the number of results is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value for the [ListClustersRequest.page_token] in the subsequent [ClusterService.List] request to iterate through multiple pages of results.
  //
  // Each of the subsequent [ClusterService.List] requests should use the [next_page_token] value returned by the previous request to continue paging through the results.
  string next_page_token = 2;
}

message CreateClusterRequest {
  // ID of the folder to create the cluster in.
  //
  // To get this ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Name of the cluster. The name must be unique within the folder.
  string name = 2 [
    (required) = true,
    (length) = "<=63",
    (pattern) = "[a-zA-Z0-9_-]*"
  ];

  // Description of the cluster.
  string description = 3 [(length) = "<=256"];

  // Custom labels for the cluster as `key:value` pairs.
  map<string, string> labels = 4 [
    (yandex.cloud.size) = "<=64",
    (length) = "<=63",
    (pattern) = "[-_0-9a-z]*",
    (map_key).length = "1-63",
    (map_key).pattern = "[a-z][-_0-9a-z]*"
  ];

  // Deployment environment of the MySQL cluster.
  Cluster.Environment environment = 5;

  // Configuration of the cluster.
  ConfigSpec config_spec = 6;

  // Configuration of databases in the cluster.
  repeated DatabaseSpec database_specs = 7;

  // Configuration of database users in the cluster.
  repeated UserSpec user_specs = 8;

  // Configuration of hosts in the cluster.
  repeated HostSpec host_specs = 9;

  // ID of the network to create the cluster in.
  string network_id = 10 [(length) = "<=50"];

  // List of security group IDs to apply to the cluster.
  repeated string security_group_ids = 11;

  // This option prevents unintended deletion of the cluster.
  bool deletion_protection = 12;

  // Host groups hosting VMs of the cluster.
  repeated string host_group_ids = 13;

  // Window of maintenance operations.
  MaintenanceWindow maintenance_window = 14;
}

message CreateClusterMetadata {
  // ID of the cluster that is being created.
  string cluster_id = 1;
}

message UpdateClusterRequest {
  reserved 10;
  // ID of the cluster to update.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Field mask that specifies which settings of the cluster should be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New description of the cluster.
  string description = 3 [(length) = "<=256"];

  // New set of custom labels for the cluster as `key:value` pairs.
  //
  // This set will completely replace the current one.
  // To add a label, request the current label set with the [ClusterService.Get] request, then send an [ClusterService.Update] request with the new label added to the current set.
  map<string, string> labels = 4 [
    (yandex.cloud.size) = "<=64",
    (length) = "<=63",
    (pattern) = "[-_0-9a-z]*",
    (map_key).length = "1-63",
    (map_key).pattern = "[a-z][-_0-9a-z]*"
  ];

  // New configuration of the cluster.
  ConfigSpec config_spec = 5;

  // New name of the cluster.
  string name = 6 [
    (length) = "<=63",
    (pattern) = "[a-zA-Z0-9_-]*"
  ];

  // Configuration of a maintenance window in an MySQL cluster.
  MaintenanceWindow maintenance_window = 7;

  // New list of security group IDs to apply to the cluster.
  repeated string security_group_ids = 8;

  // This option prevents unintended deletion of the cluster.
  bool deletion_protection = 9;

  // Host groups hosting VMs of the cluster.
  //repeated string host_group_ids = 10;

  // ID of the network to move the cluster to.
  string network_id = 11 [(length) = "<=50"];
}

message UpdateClusterMetadata {
  // ID of the cluster that is being updated.
  string cluster_id = 1;
}

message DeleteClusterRequest {
  // ID of the cluster to delete.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message DeleteClusterMetadata {
  // ID of the cluster that is being deleted.
  string cluster_id = 1;
}

message BackupClusterRequest {
  // ID of the cluster to back up.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message BackupClusterMetadata {
  // ID of the cluster that is being backed up.
  string cluster_id = 1;
  // ID of the MySQL backup that is created.
  string backup_id = 2;
}

message RestoreClusterRequest {
  reserved 3;

  // ID of the backup to restore from.
  //
  // To get this ID, make a [BackupService.List] request (lists all backups in a folder) or a [ClusterService.ListBackups] request (lists all backups for an existing cluster).
  string backup_id = 1 [(required) = true];

  // Timestamp of the moment to which the MySQL cluster should be restored.
  google.protobuf.Timestamp time = 2 [(required) = true];

  // Name of the new MySQL cluster the backup will be restored to. The name must be unique within the folder.
  string name = 4 [
    (required) = true,
    (pattern) = "[a-zA-Z0-9_-]*"
  ];

  // Description of the new cluster.
  string description = 5 [(length) = "<=256"];

  // Custom labels for the new cluster as `key:value` pairs.
  map<string, string> labels = 6 [
    (yandex.cloud.size) = "<=64",
    (length) = "<=63",
    (pattern) = "[-_0-9a-z]*",
    (map_key).length = "1-63",
    (map_key).pattern = "[a-z][-_0-9a-z]*"
  ];

  // Deployment environment of the new cluster.
  Cluster.Environment environment = 7;

  // Configuration of the new cluster.
  ConfigSpec config_spec = 8;

  // Configuration of hosts in the new cluster.
  repeated HostSpec host_specs = 9;

  // ID of the network to create the new cluster in.
  string network_id = 10 [(length) = "<=50"];

  // ID of the folder to create the new cluster in.
  string folder_id = 11 [(length) = "<=50"];

  // List of security group IDs to apply to the new cluster.
  repeated string security_group_ids = 12;

  // Deletion Protection inhibits deletion of the cluster
  bool deletion_protection = 13;

  // Host groups hosting VMs of the cluster.
  repeated string host_group_ids = 14;
}

message RestoreClusterMetadata {
  // ID of the new cluster that is being created from a backup.
  string cluster_id = 1;

  // ID of the backup that is being used for creating a cluster.
  string backup_id = 2;
}

message StartClusterFailoverRequest {
  // ID of the cluster to start failover for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Host name to switch master role to.
  // If not provided, then the master role is switched to the most up-to-date replica host.
  //
  // To get this name, make a [ClusterService.ListHosts] request.
  string host_name = 2 [(length) = "<=253"];
}

message StartClusterFailoverMetadata {
  // ID of the cluster that is being failovered.
  string cluster_id = 1;
}

message RescheduleMaintenanceRequest {
  // ID of the cluster to reschedule the maintenance operation for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  enum RescheduleType {
    RESCHEDULE_TYPE_UNSPECIFIED = 0;

    // Start the maintenance operation immediately.
    IMMEDIATE = 1;

    // Start the maintenance operation within the next available maintenance window.
    NEXT_AVAILABLE_WINDOW = 2;

    // Start the maintenance operation at the specific time.
    SPECIFIC_TIME = 3;
  }

  // The type of reschedule request.
  RescheduleType reschedule_type = 2 [(required) = true];

  // The time until which this maintenance operation should be delayed.
  // The value should be ahead of the first time when the maintenance operation has been scheduled for no more than two weeks.
  // The value can also point to the past moment of time if `IMMEDIATE` reschedule type is chosen.
  google.protobuf.Timestamp delayed_until = 3;
}

message RescheduleMaintenanceMetadata {
  reserved 2 to 3;

  // ID of the cluster the maintenance operation is being rescheduled for.
  string cluster_id = 1;

  // The time until which this maintenance operation is to be delayed.
  google.protobuf.Timestamp delayed_until = 4;
}

// A single log record.
message LogRecord {
  // Timestamp of the log record.
  google.protobuf.Timestamp timestamp = 1;

  // Contents of the log record.
  map<string, string> message = 2;
}

message ListClusterLogsRequest {
  // ID of the cluster to request logs for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Columns from the logs table to request.
  // If no columns are specified, complete log records are returned.
  repeated string column_filter = 2;

  // The log type.
  ServiceType service_type = 3;

  enum ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0;

    // MySQL error log.
    MYSQL_ERROR = 1;

    // MySQL general query log.
    MYSQL_GENERAL = 2;

    // MySQL slow query log.
    MYSQL_SLOW_QUERY = 3;

    // MySQL audit log.
    MYSQL_AUDIT = 4;
  }

  // Start timestamp for the logs request.
  // The logs in the response will be within [from_time] to [to_time] range.
  google.protobuf.Timestamp from_time = 4;

  // End timestamp for the logs request.
  // The logs in the response will be within [from_time] to [to_time] range.
  google.protobuf.Timestamp to_time = 5;

  // The maximum number of results per page to return.
  //
  // If the number of available results is larger than [page_size], the API returns a [ListClusterLogsResponse.next_page_token] that can be used to get the next page of results in the subsequent [ClusterService.ListLogs] requests.
  int64 page_size = 6 [(value) = "0-1000"];

  // Page token that can be used to iterate through multiple pages of results.
  //
  // To get the next page of results, set [page_token] to the [ListClusterLogsResponse.next_page_token] returned by the previous [ClusterService.ListLogs] request.
  string page_token = 7 [(length) = "<=100"];

  // Option that controls the behavior of result pagination.
  // If it is set to `true`, then [ListClusterLogsResponse.next_page_token] will always be returned, even if the current page is empty.
  bool always_next_page_token = 8;
}

message ListClusterLogsResponse {
  // Requested log records.
  repeated LogRecord logs = 1;

  // The token that can be used to get the next page of results.
  //
  // If the number of results is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value for the [ListClusterLogsRequest.page_token] in the subsequent [ClusterService.ListLogs] request to iterate through multiple pages of results.
  //
  // Each of the subsequent [ClusterService.ListLogs] requests should use the [next_page_token] value returned by the previous request to continue paging through the results.
  //
  // This value is interchangeable with [StreamLogRecord.next_record_token] from [ClusterService.StreamLogs] method.
  string next_page_token = 2;
}

// A single log record in the logs stream.
message StreamLogRecord {
  // One of the requested log records.
  LogRecord record = 1;

  // The token that can be used to continue streaming logs starting from the exact same record.
  // To continue streaming, specify value of [next_record_token] as the [StreamClusterLogsRequest.record_token] value in the next [ClusterService.StreamLogs] request.
  //
  // This value is interchangeable with [ListClusterLogsResponse.next_page_token] from [ClusterService.ListLogs] method.
  string next_record_token = 2;
}

message StreamClusterLogsRequest {
  // ID of the cluster to stream logs for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Columns from the logs table to request.
  // If no columns are specified, complete log records are returned.
  repeated string column_filter = 2;

  // The log type.
  ServiceType service_type = 3;

  enum ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0;

    // MySQL error log.
    MYSQL_ERROR = 1;

    // MySQL general query log.
    MYSQL_GENERAL = 2;

    // MySQL slow query log.
    MYSQL_SLOW_QUERY = 3;

    // MySQL audit log.
    MYSQL_AUDIT = 4;
  }

  // Start timestamp for the logs request.
  google.protobuf.Timestamp from_time = 4;

  // End timestamp for the logs request.
  // If this field is not set, all existing log records beginning from [from_time] will be returned first, and then the new records will be returned as they appear.
  //
  // In essence it has `tail -f` command semantics.
  google.protobuf.Timestamp to_time = 5;

  // Record token that can be used to control logs streaming.
  //
  // Set [record_token] to the [StreamLogRecord.next_record_token], returned by the previous [ClusterService.StreamLogs] request to start streaming from the next log record.
  string record_token = 6 [(length) = "<=100"];

  // A filter expression that selects clusters logs listed in the response.
  //
  // The expression must specify:
  // 1. The field name. Currently filtering can be applied to the [LogRecord.logs.hostname] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
  // Examples of a filter: `message.hostname='node1.db.cloud.yandex.net'`
  string filter = 7 [(length) = "<=1000"];
}

message ListClusterOperationsRequest {
  // ID of the cluster to list operations for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // The maximum number of results per page to return.
  //
  // If the number of available results is larger than [page_size], the API returns a [ListClusterOperationsResponse.next_page_token] that can be used to get the next page of results in the subsequent [ClusterService.ListOperations] requests.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token that can be used to iterate through multiple pages of results.
  //
  // To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token] returned by the previous [ClusterService.ListOperations] request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterOperationsResponse {
  // List of operations in the cluster.
  repeated operation.Operation operations = 1;

  // The token that can be used to get the next page of results.
  //
  // If the number of results is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value for the [ListClusterOperationsRequest.page_token] in the subsequent [ClusterService.ListOperations] request to iterate through multiple pages of results.
  //
  // Each of the subsequent [ClusterService.ListOperations] requests should use the [next_page_token] value returned by the previous request to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterBackupsRequest {
  // ID of the cluster to list backups for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // The maximum number of results per page to return.
  //
  // If the number of available results is larger than [page_size], the API returns a [ListClusterBackupsResponse.next_page_token] that can be used to get the next page of results in the subsequent [ClusterService.ListBackups] requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token that can be used to iterate through multiple pages of results.
  //
  // To get the next page of results, set [page_token] to the [ListClusterBackupsResponse.next_page_token] returned by the previous [ClusterService.ListBackups] request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterBackupsResponse {
  // List of the cluster backups.
  repeated Backup backups = 1;

  // The token that can be used to get the next page of results.
  //
  // If the number of results is larger than [ListClusterBackupsRequest.page_size], use the [next_page_token] as the value for the [ListClusterBackupsRequest.page_token] in the subsequent [ClusterService.ListBackups] request to iterate through multiple pages of results.
  //
  // Each of the subsequent [ClusterService.ListBackups] requests should use the [next_page_token] value returned by the previous request to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterHostsRequest {
  // ID of the cluster to list hosts for.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // The maximum number of results per page to return.
  //
  // If the number of available results is larger than [page_size], the API returns a [ListClusterHostsResponse.next_page_token] that can be used to get the next page of results in the subsequent [ClusterService.ListHosts] requests.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token that can be used to iterate through multiple pages of results.
  //
  // To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token] returned by the previous [ClusterService.ListHosts] request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterHostsResponse {
  // List of hosts in the cluster.
  repeated Host hosts = 1;

  // The token that can be used to get the next page of results.
  //
  // If the number of results is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value for the [ListClusterHostsRequest.page_token] in the subsequent [ClusterService.ListHosts] request to iterate through multiple pages of results.
  //
  // Each of the subsequent [ClusterService.ListHosts] requests should use the [next_page_token] value returned by the previous request to continue paging through the results.
  string next_page_token = 2;
}

message AddClusterHostsRequest {
  // ID of the cluster to add hosts to.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Configuration of the newly added hosts.
  repeated HostSpec host_specs = 2 [(size) = ">0"];
}

message AddClusterHostsMetadata {
  // ID of the cluster to which the hosts are being added.
  string cluster_id = 1;

  // Names of hosts that are being added.
  repeated string host_names = 2;
}

message DeleteClusterHostsRequest {
  // ID of the cluster to delete hosts from.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Names of hosts to delete.
  //
  // To get these names, make a [ClusterService.ListHosts] request.
  repeated string host_names = 2 [
    (size) = ">0",
    (length) = "<=253"
  ];
}

message DeleteClusterHostsMetadata {
  // ID of the cluster from which the hosts are being deleted.
  string cluster_id = 1;

  // Names of hosts that are being deleted.
  repeated string host_names = 2;
}

message StartClusterRequest {
  // ID of the cluster to start.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message StartClusterMetadata {
  // ID of the cluster that is being started.
  string cluster_id = 1;
}

message StopClusterRequest {
  // ID of the cluster to stop.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message StopClusterMetadata {
  // ID of the cluster that is being stopped.
  string cluster_id = 1;
}

message MoveClusterRequest {
  // ID of the cluster to move.
  //
  // To get this ID, make a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // ID of the destination folder.
  //
  // To get this ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string destination_folder_id = 2 [
    (required) = true,
    (length) = "<=50"
  ];
}

message MoveClusterMetadata {
  // ID of the cluster that is being moved.
  string cluster_id = 1;

  // ID of the source folder.
  string source_folder_id = 2;

  // ID of the destination folder.
  string destination_folder_id = 3;
}

message UpdateClusterHostsRequest {
  // ID of the MySQL cluster to update hosts in.
  // To get the MySQL cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // New configurations to apply to hosts.
  repeated UpdateHostSpec update_host_specs = 2 [(size) = ">0"];
}

message UpdateClusterHostsMetadata {
  // ID of the cluster in which the hosts are being updated.
  string cluster_id = 1;

  // Names of hosts that are being updated.
  repeated string host_names = 2;
}

message UpdateHostSpec {
  // Name of the host to update.
  // To get a MySQL host name, use a [ClusterService.ListHosts] request.
  string host_name = 1 [(required) = true];

  // [Host.name] of the host to be used as the replication source (for cascading replication).
  // To get a MySQL host name, use a [ClusterService.ListHosts] request.
  string replication_source = 2;

  // Field mask that specifies which settings of the MySQL host should be updated.
  google.protobuf.FieldMask update_mask = 3;

  // Host backup priority.
  int64 backup_priority = 4 [(value) = "0-100"];

  // Whether the host should get a public IP address on creation.
  bool assign_public_ip = 5;

  // Host master promotion priority.
  int64 priority = 6 [(value) = "0-100"];
}

message HostSpec {
  // ID of the availability zone where the host resides.
  //
  // To get a list of available zones, make the [yandex.cloud.compute.v1.ZoneService.List] request.
  string zone_id = 1 [(length) = "<=50"];

  // ID of the subnet to assign to the host.
  //
  // This subnet should be a part of the cluster network (the network ID is specified in the [ClusterService.CreateClusterRequest.network_id]).
  string subnet_id = 2 [(length) = "<=50"];

  // Option that enables public IP address for the host so that the host can be accessed from the internet.
  //
  // After a host has been created, this setting cannot be changed.
  // To remove an assigned public IP address, or to assign a public IP address to a host without one, recreate the host with the appropriate [assign_public_ip] value set.
  //
  // Possible values:
  // * `false` - don't assign a public IP address to the host.
  // * `true` - assign a public IP address to the host.
  bool assign_public_ip = 3;

  // [Host.name] of the host to be used as the replication source (for cascading replication).
  string replication_source = 4;

  // Host backup priority
  int64 backup_priority = 5 [(value) = "0-100"];

  // Host master promotion priority
  int64 priority = 6 [(value) = "0-100"];
}

message ConfigSpec {
  // Version of MySQL used in the cluster.
  //
  // Possible values: `5.7`, `8.0`.
  string version = 1; // No formal validation, a list of supported versions should suffice.

  // Cluster-wide MySQL configuration.
  oneof mysql_config {
    // Configuration for a MySQL 5.7 cluster.
    config.MysqlConfig5_7 mysql_config_5_7 = 2 [json_name = "mysqlConfig_5_7"];

    // Configuration for a MySQL 8.0 cluster.
    config.MysqlConfig8_0 mysql_config_8_0 = 6 [json_name = "mysqlConfig_8_0"];
  }

  // Resource preset for the cluster hosts.
  Resources resources = 3;

  // Time to start the daily backup, in the UTC timezone.
  google.type.TimeOfDay backup_window_start = 4;

  // Access policy for external services.
  //
  // If the specific services need to access the cluster, then set the necessary values in this policy.
  Access access = 5;

  // Configuration of the performance diagnostics service.
  PerformanceDiagnostics performance_diagnostics = 7;

  // Retention policy of automated backups.
  google.protobuf.Int64Value backup_retain_period_days = 8 [(value) = "7-60"];
}
