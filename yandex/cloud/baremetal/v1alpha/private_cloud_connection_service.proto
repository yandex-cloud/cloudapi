syntax = "proto3";

package yandex.cloud.baremetal.v1alpha;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/baremetal/v1alpha/private_cloud_connection.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/baremetal/v1alpha;baremetal";
option java_package = "yandex.cloud.api.baremetal.v1alpha";

// A set of methods for managing Private cloud connection resources.
service PrivateCloudConnectionService {
  // Returns the specific Private cloud connection resource.
  //
  // To get the list of available Private cloud connection resources, make a [List] request.
  rpc Get(GetPrivateCloudConnectionRequest) returns (PrivateCloudConnection) {
    option (google.api.http) = {
      get: "/baremetal/v1alpha/privateCloudConnections/{private_cloud_connection_id}"
    };
  }

  // Retrieves the list of Private cloud connection resources in the specified folder.
  rpc List(ListPrivateCloudConnectionRequest) returns (ListPrivateCloudConnectionResponse) {
    option (google.api.http) = {
      get: "/baremetal/v1alpha/privateCloudConnections"
    };
  }

  // Creates a private cloud connection in the specified folder.
  rpc Create(CreatePrivateCloudConnectionRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/baremetal/v1alpha/privateCloudConnections"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "CreatePrivateCloudConnectionMetadata"
      response: "PrivateCloudConnection"
    };
  }

 // Updates the routing_instance_id in a private cloud connection.
 rpc Update(UpdatePrivateCloudConnectionRequest) returns (operation.Operation) {
  option (google.api.http) = {
    patch: "/baremetal/v1alpha/privateCloudConnections/{private_cloud_connection_id}"
    body: "*"
  };
  option (yandex.cloud.api.operation) = {
    metadata: "UpdatePrivateCloudConnectionMetadata"
    response: "PrivateCloudConnection"
  };
}

  // Removes a private cloud connection and all allocated network resouces
  rpc Delete(DeletePrivateCloudConnectionRequest) returns (operation.Operation) {
    option (google.api.http) = {
      delete: "/baremetal/v1alpha/privateCloudConnections/{private_cloud_connection_id}"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "DeletePrivateCloudConnectionMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetPrivateCloudConnectionRequest {
  // ID of the Private cloud connection resource to return.
  //
  // To get the server ID, use a [PrivateCloudConnectionService.List] request.
  string private_cloud_connection_id = 1 [
    (pattern) = "[a-z][a-z0-9.-]*",
    (length) = "<=20"
  ];
}

message ListPrivateCloudConnectionRequest {
  reserved 2 to 99;

  // ID of the folder to list private cloud connections in.
  //
  // To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [
    (pattern) = "[a-z][a-z0-9.-]*",
    (length) = "<=50"
  ];

  // The maximum number of results per page to return. If the number of available
  // results is greater than `page_size`,
  // the service returns a [ListPrivateCloudConnectionResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value is 20.
  int64 page_size = 100 [(value) = "<=100"];

  // Page token. To get the next page of results, set `page_token` to the
  // [ListPrivateCloudConnectionResponse.next_page_token] returned by a previous list request.
  string page_token = 101;

  // By which column the listing should be ordered and in which direction,
  // format is "createdAt desc". "id asc" if omitted.
  // Supported fields: ["id", "createdAt", "updatedAt"].
  // Both snake_case and camelCase are supported for fields.
  string order_by = 102;

  // A filter expression that filters resources listed in the response.
  // The expression consists of one or more conditions united by `AND` operator: `<condition1> [AND <condition2> [<...> AND <conditionN>]]`.
  //
  // Each condition has the form `<field> <operator> <value>`, where:
  // 1. `<field>` is the field name. Currently you can use filtering only on the limited number of fields.
  // 2. `<operator>` is a logical operator, one of `=` (equal), `:` (substring).
  // 3. `<value>` represents a value.
  // String values should be written in double (`"`) or single (`'`) quotes. C-style escape sequences are supported (`\"` turns to `"`, `\'` to `'`, `\\` to backslash).
  // Example: "key1='value' AND key2='value'"
  // Supported operators: ["AND"].
  // Supported fields: ["id", "name", "status", "vrfId", "routingInstanceId"].
  // Both snake_case and camelCase are supported for fields.
  string filter = 103;
}

message ListPrivateCloudConnectionResponse {
  reserved 2 to 99;
  
  // List of Private cloud connection resources.
  repeated PrivateCloudConnection private_cloud_connections = 1;

  // Token for getting the next page of the list. If the number of results is greater than
  // [ListPrivateCloudConnectionRequest.page_size], use `next_page_token` as the value
  // for the [ListPrivateCloudConnectionRequest.page_token] parameter in the next list request.
  //
  // Each subsequent page will have its own `next_page_token` to continue paging through the results.
  string next_page_token = 100;
}

message CreatePrivateCloudConnectionRequest {
  reserved 1, 2, 3, 6 to 200;

  // ID of Cloud Router Routing Instance.
  string routing_instance_id = 4;

  // ID of VRF that is connected to routing Instance.
  //
  // To get the VRF ID, use a [VrfService.List] request.
  string vrf_id = 5 [
    (pattern) = "[a-z][a-z0-9.-]*",
    (length) = "<=20"
  ];
}

message CreatePrivateCloudConnectionMetadata {
  // ID of the private cloud connection that is being created.
  string private_cloud_connection_id = 1;
}

message UpdatePrivateCloudConnectionRequest {
  // ID of the private cloud connection to update.
  //
  // To get the private cloud connection ID, use a [PrivateCloudConnectionService.List] request.
  string private_cloud_connection_id = 1 [
    (pattern) = "[a-z][a-z0-9.-]*",
    (length) = "<=20"
  ];
  // Field mask that specifies which fields of the PrivateCloudConnection resource are going to be updated.
  google.protobuf.FieldMask update_mask = 2;

  // ID of Cloud Router Routing Instance.
  string routing_instance_id = 3;
}

message UpdatePrivateCloudConnectionMetadata {
  // ID of the Private cloud connection resource that is being update.
  string private_cloud_connection_id = 1;
}

message DeletePrivateCloudConnectionRequest {
  // ID of the private cloud connection to delete.
  //
  // To get the private cloud connection ID, use a [PrivateCloudConnectionService.List] request.
  string private_cloud_connection_id = 1 [
    (pattern) = "[a-z][a-z0-9.-]*",
    (length) = "<=20"
  ];
}

message DeletePrivateCloudConnectionMetadata {
  // ID of the Private cloud connection resource that is being deleted.
  string private_cloud_connection_id = 1;
}
