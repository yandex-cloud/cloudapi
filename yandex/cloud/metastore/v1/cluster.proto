syntax = "proto3";

package yandex.cloud.metastore.v1;

import "yandex/cloud/metastore/v1/maintenance.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/logging/v1/log_entry.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/metastore/v1;metastore";
option java_package = "yandex.cloud.api.metastore.v1";

// Hive Metastore Cluster.
message Cluster {
  enum Health {

    // State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
    HEALTH_UNKNOWN = 0;

    // Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE).
    ALIVE = 1;

    // Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
    DEAD = 2;

    // Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
    DEGRADED = 3;
  }

  enum Status {

    // Cluster state is unknown.
    STATUS_UNKNOWN = 0;

    // Cluster is being created.
    CREATING = 1;

    // Cluster is running normally.
    RUNNING = 2;

    // Cluster encountered a problem and cannot operate.
    ERROR = 3;

    // Cluster is being updated.
    UPDATING = 4;

    // Cluster is stopping.
    STOPPING = 5;

    // Cluster stopped.
    STOPPED = 6;

    // Cluster is starting.
    STARTING = 7;
  }

  // ID of the Metastore cluster.
  // This ID is assigned by MDB at creation time.
  string id = 1;

  // ID of the folder that the Metastore cluster belongs to.
  string folder_id = 2;

  // Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp created_at = 3;

  // Name of the Metastore cluster.
  // The name is unique within the folder. 1-63 characters long.
  string name = 4;

  // Description of the Metastore cluster. 0-256 characters long.
  string description = 5;

  // Custom labels for the Metastore cluster as `` key:value `` pairs.
  // Maximum 64 per resource.
  map<string, string> labels = 6;

  reserved 7;

  // Aggregated cluster health.
  Health health = 8;

  // Current state of the cluster.
  Status status = 9;

  // Subnet ids to put metastore servers
  repeated string subnet_ids = 10 [deprecated = true];

  // Minimum number of metastore servers per zone
  int64 min_servers_per_zone = 11;

  // Maximum number of metastore servers per zone
  int64 max_servers_per_zone = 12;

  // Actual number of metastore servers per zone
  int64 servers_per_zone = 13;

  // User security groups
  repeated string security_group_ids = 14 [deprecated = true];

  // Host groups hosting VMs of the cluster.
  repeated string host_group_ids = 15;

  // Deletion Protection inhibits deletion of the cluster
  bool deletion_protection = 16;

  // Metastore server version
  string version = 17;

  // Metastore network
  string network_id = 18;

  // IP address of metastore server balancer endpoint
  string endpoint_ip = 19;

  // Metastore cluster configuration
  ClusterConfig cluster_config = 20;

  // Service account that will be used to access a YC resources
  string service_account_id = 21 [(length) = "<=50"];

  // Cloud logging configuration
  LoggingConfig logging = 22;

  // Network related configuration options.
  NetworkConfig network = 23;

  // Window of maintenance operations.
  MaintenanceWindow maintenance_window = 24;

  // Maintenance operation planned at nearest maintenance_window.
  MaintenanceOperation planned_operation = 25;
}

message ClusterConfig {
  reserved 1;
  Resources resources = 2;
}

message NetworkConfig {
  // IDs of VPC network subnets where instances of the cluster are attached.
  repeated string subnet_ids = 1;

  // User security groups.
  repeated string security_group_ids = 2;
}

message Resources {
  // ID of the preset for computational resources available to a pod (CPU, memory etc.).
  string resource_preset_id = 1;
}

message LoggingConfig {
  bool enabled = 1;

  oneof destination {
    string folder_id = 2 [(pattern) = "([a-zA-Z][-a-zA-Z0-9_.]{0,63})?"];
    string log_group_id = 3 [(pattern) = "([a-zA-Z][-a-zA-Z0-9_.]{0,63})?"];
  }

  yandex.cloud.logging.v1.LogLevel.Level min_level = 4;
}
