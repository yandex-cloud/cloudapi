syntax = "proto3";

package yandex.cloud.metastore.v1;

import "yandex/cloud/metastore/v1/maintenance.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/metastore/v1/cluster.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/metastore/v1;metastore";
option java_package = "yandex.cloud.api.metastore.v1";


// A set of methods for managing Hive Metastore Cluster resources.
service ClusterService {
  // Returns the specified Hive Metastore Cluster resource.
  //
  // To get the list of available Hive Metastore Cluster resources, make a [List] request.
  rpc Get (GetClusterRequest) returns (Cluster) {
    option (google.api.http) = {get: "/managed-metastore/v1/clusters/{cluster_id}"};
  }

  // Retrieves the list of Hive Metastore Cluster resources that belong
  // to the specified folder.
  rpc List (ListClustersRequest) returns (ListClustersResponse) {
    option (google.api.http) = {get: "/managed-metastore/v1/clusters"};
  }

  // Retrieves the list of Operation resources for the specified Hive Metastore Cluster.
  rpc ListOperations (ListClusterOperationsRequest) returns (ListClusterOperationsResponse) {
    option (google.api.http) = {get: "/managed-metastore/v1/clusters/{cluster_id}/operations"};
  }

  // Creates a Hive Metastore Cluster in the specified folder.
  rpc Create (CreateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-metastore/v1/clusters"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateClusterMetadata"
      response: "Cluster"
    };
  }

  // Updates configuration of the specified Hive Metastore Cluster.
  rpc Update (UpdateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {
      patch: "/managed-metastore/v1/clusters/{cluster_id}"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateClusterMetadata"
      response: "Cluster"
    };
  }

  // Deletes the specified Hive Metastore Cluster.
  rpc Delete (DeleteClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/managed-metastore/v1/clusters/{cluster_id}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteClusterMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Stop the specified Hive Metastore Cluster.
  rpc Stop (StopClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-metastore/v1/clusters/{cluster_id}:stop"};
    option (yandex.cloud.api.operation) = {
      metadata: "StopClusterMetadata"
      response: "Cluster"
    };
  }

  // Start the specified Hive a Metastore Cluster.
  rpc Start (StartClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-metastore/v1/clusters/{cluster_id}:start"};
    option (yandex.cloud.api.operation) = {
      metadata: "StartClusterMetadata"
      response: "Cluster"
    };
  }

  // Import data to the specified Hive Metastore Cluster.
  rpc ImportData (ImportDataRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-metastore/v1/clusters/{cluster_id}:import"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "ImportDataMetadata"
      response: "Cluster"
    };
  }

  // Export data from the specified Hive Metastore Cluster.
  rpc ExportData (ExportDataRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/managed-metastore/v1/clusters/{cluster_id}:export"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "ExportDataMetadata"
      response: "Cluster"
    };
  }
}

message GetClusterRequest {
  // ID of the Metastore Cluster resource to return.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message ListClustersRequest {
  // ID of the folder to list Metastore clusters in.
  // To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
  // 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
  // 3. The value. Must be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.
  string filter = 4 [(length) = "<=1000"];
}

message ListClustersResponse {
  // List of Metastore Cluster resources.
  repeated Cluster clusters = 1;
  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
  // for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
  // list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateClusterRequest {
  // ID of the folder to create the Metastore cluster in.
  string folder_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Name of the Metastore cluster. The name must be unique within the folder.
  string name = 2 [
    (required) = true,
    (length) = "<=63",
    (pattern) = "[a-zA-Z0-9_-]*"
  ];

  // Description of the Metastore cluster.
  string description = 3 [(length) = "<=256"];

  // Custom labels for the Metastore cluster as `` key:value `` pairs. Maximum 64 per resource.
  // For example, "project": "mvp" or "source": "dictionary".
  map<string, string> labels = 4 [
    (yandex.cloud.size) = "<=64",
    (length) = "<=63",
    (pattern) = "[-_0-9a-z]*",
    (map_key).length = "1-63",
    (map_key).pattern = "[a-z][-_0-9a-z]*"
  ];

  reserved 5;

  // Subnet ids to put metastore servers.
  repeated string subnet_ids = 6 [deprecated = true];

  // Minimum number of metastore servers per zone.
  int64 min_servers_per_zone = 7;

  // Maximum number of metastore servers per zone.
  int64 max_servers_per_zone = 8;

  // User security groups.
  repeated string security_group_ids = 9 [deprecated = true];

  // Host groups to place VMs of cluster on. Note: unused property.
  repeated string host_group_ids = 10;

  // Deletion Protection inhibits deletion of the cluster.
  bool deletion_protection = 11;

  // Metastore server version.
  string version = 12;

  // Metastore cluster configuration.
  ConfigSpec config_spec = 13;

  // Service account that will be used to access YC resources
  string service_account_id = 14 [(length) = "<=50"];

  // Cloud logging configuration
  LoggingConfig logging = 15;

  // Network related configuration options.
  NetworkConfig network = 16;

  // Window of maintenance operations.
  MaintenanceWindow maintenance_window = 17;
}

message CreateClusterMetadata {
  // ID of the Metastore cluster that is being created.
  string cluster_id = 1;
}

message UpdateClusterMetadata {
  // ID of the Metastore Cluster resource that is being updated.
  string cluster_id = 1;
}

message UpdateClusterRequest {
  // ID of the Metastore Cluster resource to update.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // Field mask that specifies which fields of the Metastore Cluster resource should be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New name of the cluster.
  string name = 3 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];

  // New description of the Metastore cluster.
  string description = 4 [(length) = "<=256"];

  // Custom labels for the Metastore cluster as `` key:value `` pairs. For example, "env": "prod".
  //
  // The new set of labels will completely replace the old ones. To add a label, request the current
  // set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
  map<string, string> labels = 5 [
    (yandex.cloud.size) = "<=64",
    (length) = "<=63",
    (pattern) = "[-_0-9a-z]*",
    (map_key).length = "1-63",
    (map_key).pattern = "[a-z][-_0-9a-z]*"
  ];

  // User security groups.
  repeated string security_group_ids = 6 [deprecated = true];

  // Deletion Protection inhibits deletion of the cluster
  bool deletion_protection = 7;

  // Service account used to access Cloud resources.
  string service_account_id = 8 [(length) = "<=50"];

  // Cloud logging configuration
  LoggingConfig logging = 9;
  
  // Network related configuration options.
  UpdateNetworkConfigSpec network_spec = 10;

  // Metastore cluster configuration.
  UpdateClusterConfigSpec config_spec = 11;

  // Window of maintenance operations.
  MaintenanceWindow maintenance_window = 12;
}

message UpdateNetworkConfigSpec {
  // User security groups.
  repeated string security_group_ids = 1;
}

message DeleteClusterRequest {
  // ID of the Metastore cluster to delete.
  // To get the Metastore cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message DeleteClusterMetadata {
  // ID of the Metastore cluster that is being deleted.
  string cluster_id = 1;
}

message StopClusterRequest {
  // ID of the Metastore cluster to stop.
  // To get the Metastore cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message StopClusterMetadata {
  // ID of the Metastore cluster that is being stopped.
  string cluster_id = 1;
}

message StartClusterRequest {
  // ID of the Metastore cluster to start.
  // To get the Metastore cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
}

message StartClusterMetadata {
  // ID of the Metastore cluster that is being started.
  string cluster_id = 1;
}

message ImportDataRequest {
  // ID of the Metastore Cluster to import data in.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
  // S3 bucket to import backup from.
  string bucket = 2 [(required) = true];
  // Import dump filepath.
  string filepath = 3 [(required) = true];
}

message ImportDataMetadata {
  // ID of the Metastore Cluster to import data in.
  string cluster_id = 1;
}

message ExportDataRequest {
  // ID of the Metastore Cluster to export data from.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];
  // S3 bucket to export backup from.
  string bucket = 2 [(required) = true];
  // Export dump filepath.
  string filepath = 3 [(required) = true];
}

message ExportDataMetadata {
  // ID of the Metastore Cluster to export data from.
  string cluster_id = 1;
}

message ListClusterOperationsRequest {
  // ID of the Apache Kafka Cluster resource to list operations for.
  string cluster_id = 1 [
    (required) = true,
    (length) = "<=50"
  ];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterOperationsResponse {
  // List of Operation resources for the specified Apache Kafka cluster.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message ConfigSpec {
  reserved 1;
  Resources resources = 2;
}

message UpdateClusterConfigSpec {
  Resources resources = 1;
}
