syntax = "proto3";

package yandex.cloud.connectionmanager.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/wrappers.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/connectionmanager/v1/connection.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/connectionmanager/v1;connectionmanager";
option java_package = "yandex.cloud.api.connectionmanager.v1";

// A set of methods for managing Connection resources.
service ConnectionService {
    // Returns connection.
    rpc Get(GetConnectionRequest) returns (Connection) {
        option (google.api.http) = {
            get: "/v1/connection/{connection_id}"
        };
    }

    // Returns the connection with the resolved cluster; that is,
    // * for connections to the on-premise clusters is identical to the Get RPC;
    // * for connections to the managed clusters, resolves the cluster topology
    //   and returns it in the `on_premise` field of the connection parameters.
    // Requires `connection-manager.connections.resolveCluster` permission.
    rpc ResolveCluster(ResolveClusterRequest) returns (Connection) {
        option (google.api.http) = {
            get: "/v1/connection/resolveCluster/{connection_id}"
        };
    }

    // List connections in specified folder.
    rpc List(ListConnectionRequest) returns (ListConnectionResponse) {
        option (google.api.http) = {
            get: "/v1/connections"
        };
    }

    // Creates connection.
    rpc Create(CreateConnectionRequest) returns (operation.Operation) {
        option (google.api.http) = {
            post: "/v1/connection"
            body: "*"
        };
        option (yandex.cloud.api.operation) = {
            metadata: "CreateConnectionMetadata"
            response: "Connection"
        };
    }

    // Updates specified connection.
    rpc Update(UpdateConnectionRequest) returns (operation.Operation) {
        option (google.api.http) = {
            patch: "/v1/connection/{connection_id}"
            body: "*"
        };
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateConnectionMetadata"
            response: "Connection"
        };
    }

    // Delete specified connection.
    rpc Delete(DeleteConnectionRequest)  returns (operation.Operation) {
        option (google.api.http) = {
            delete: "/v1/connection/{connection_id}"
        };
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteConnectionMetadata"
            response: "google.protobuf.Empty"
        };
    }

    // Retrieves the list of Operation resources for the specified connection.
    rpc ListOperations(ListOperationsRequest) returns (ListOperationsResponse) {
        option (google.api.http) = {
            get: "/v1/operations"
        };
    }
}

message CreateConnectionRequest {
    reserved 6 to 10;
    string folder_id = 1;
    string name = 2;
    string description = 3;
    map<string, string> labels = 4;
    ConnectionParams params = 5;
}
message CreateConnectionMetadata {
    string connection_id = 1;
}

message UpdateConnectionRequest {
    reserved 7 to 9;
    string connection_id = 1;
    google.protobuf.FieldMask update_mask = 2;
    string name = 3;
    string description = 4;
    map<string, string> labels = 5;
    ConnectionParams params = 6;
}
message UpdateConnectionMetadata {
    string connection_id = 1;
}

message DeleteConnectionRequest {
    string connection_id = 1;
}
message DeleteConnectionMetadata {
}

message ListConnectionRequest {
    reserved 3;
    string folder_id = 1;
    string mdb_cluster_id = 2;
    int64 page_size = 4;
    string page_token = 5;
    string name_pattern_or_id = 6;
    string author_id = 7;
    bool with_can_use = 8;
    google.protobuf.BoolValue is_onpremise = 9;
    google.protobuf.BoolValue is_manual = 10;
    DBType db_type = 11;
 }

message ListConnectionResponse {
    repeated Connection connection = 1;
    string next_page_token = 2;
}

message GetConnectionRequest {
    reserved 2, 3;
    string connection_id = 1;
}

message ResolveClusterRequest {
    reserved 2;
    string connection_id = 1;
}

message DeleteVersionMetadata {
  string connection_id = 1;
  string version_id = 2;
}

message ListOperationsRequest {
    string connection_id = 1;
    int64 page_size = 2;
    string page_token = 3;
}

message ListOperationsResponse {
    repeated operation.Operation operations = 1;
    string next_page_token = 2;
}
