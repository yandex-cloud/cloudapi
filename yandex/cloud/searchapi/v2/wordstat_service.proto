syntax = "proto3";

package yandex.cloud.searchapi.v2;


import "yandex/cloud/validation.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/searchapi/v2;searchapi";
option java_package = "yandex.cloud.api.search.v2";

// A set of methods for viewing statistics on search queries to Yandex.
service WordstatService {
  // The method returns the last 30 days data about popular queries containing the specified keyword and queries that are similar to the specified one.
  rpc GetTop (GetTopRequest) returns (GetTopResponse) {
    option (google.api.http) = { post: "/v2/wordstat/topRequests" body: "*" };
  }

  // The method returns the frequency of queries over time for a given keyword.
  rpc GetDynamics (GetDynamicsRequest) returns (GetDynamicsResponse) {
    option (google.api.http) = { post: "/v2/wordstat/dynamics" body: "*" };
  }

  // The method returns the distribution of the number of queries containing the given keyword globally by region for the last 30 days.
  rpc GetRegionsDistribution (GetRegionsDistributionRequest) returns (GetRegionsDistributionResponse) {
    option (google.api.http) = { post: "/v2/wordstat/regions" body: "*" };
  }
}

enum Device {
  DEVICE_UNSPECIFIED = 0;
  // All devices.
  DEVICE_ALL = 1;
  // Desktop computers.
  DEVICE_DESKTOP = 2;
  // Phones.
  DEVICE_PHONE = 3;
  // Tablets.
  DEVICE_TABLET = 4;
}

message GetTopRequest {
  // Keyword
  string phrase = 1 [(required) = true, (length) = "<=400"];
  // Number of the phrases in the response.
  int64 num_phrases = 2 [(value) = "1-2000"];
  // A list of IDs of the regions a query was made from.
  repeated string regions = 3 [(size) = "<=100"];
  // A list of device types a query was made from.
  repeated Device devices = 4 [(size) = "<=3"];
}

message GetTopResponse {
  message PhraseInfo {
    // Keyword.
    string phrase = 1;
    // Number of queries made.
    int64  count = 2;
  }

  // Total number of the queries that contain all the keywords, regardless of their order.
  int64 total_count =1;
  // Results.
  repeated  PhraseInfo results = 2;
  // Queries that are similar to the specified one.
  repeated  PhraseInfo associations = 3;
}

message GetDynamicsRequest {
  enum Period {
    PERIOD_UNSPECIFIED = 0;
    // Details by month.
    PERIOD_MONTHLY = 1;
    // Details by week.
    PERIOD_WEEKLY = 2;
    // Details by day.
    PERIOD_DAILY = 3;
  }

  // Keyword.
  string phrase = 1 [(required) = true, (length) = "<=400"];
  // The period of aggregation of the number of queries.
  Period period = 2 [(required) = true];
  // The start of the period data is requested for.
  google.protobuf.Timestamp from_date = 3 [(required) = true];
  // The end of the period data is requested for.
  google.protobuf.Timestamp to_date = 4;
  // A list of IDs of the regions a query was made from.
  repeated string regions = 5 [(size) = "<=100"];
  // A list of device types a query was made from.
  repeated Device devices = 6 [(size) = "<=3"];
}

message GetDynamicsResponse {
  message DynamicsInfo {
    // The date
    google.protobuf.Timestamp date = 1;
    // Number of queries containing the given keyword
    int64 count = 2;
    // The share of the number of such queries from the total number of queries to Yandex.
    double share = 3;
  }
  // Results.
  repeated DynamicsInfo results = 1;
}

message GetRegionsDistributionRequest {
  enum Region {
    REGION_UNSPECIFIED = 0;
    // Show distribution everywhere.
    REGION_ALL = 1;
    // Show distribution by cities.
    REGION_CITIES = 2;
    // Show distribution by regions.
    REGION_REGIONS = 3;
  }

  // Keyword
  string phrase = 1 [(required) = true, (length) = "<=400"];
  // Show query distribution only by city, only by region, or everywhere.
  Region region = 2;
  // A list of device types a query was made from.
  repeated Device devices = 3;
}

message GetRegionsDistributionResponse {
  message RegionInfo {
      // region ID
      string region = 1;
      // Number of queries containing the given keyword.
      int64  count = 2;
      // The share of the number of such queries from the total number of queries to Yandex in the region.
      double share = 3;
      // The ratio between the share of the selected queries in the region and their share across the country.
      double affinity_index = 4;
  }
  // Results.
  repeated  RegionInfo results = 1;
}
