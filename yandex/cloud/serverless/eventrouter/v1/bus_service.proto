syntax = "proto3";

package yandex.cloud.serverless.eventrouter.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/access/access.proto";
import "yandex/cloud/serverless/eventrouter/v1/bus.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/serverless/eventrouter/v1;eventrouter";
option java_outer_classname = "PERBS";
option java_package = "yandex.cloud.api.serverless.eventrouter.v1";

// A set of methods for managing buses for serverless eventrouter.
service BusService {
  // Returns the specified bus.
  // To get the list of all available buses, make a [List] request.
  rpc Get (GetBusRequest) returns (Bus) {
    option (google.api.http) = {get: "/eventrouter/v1/buses/{bus_id}"};
  }

  // Retrieves the list of buses in the specified folder.
  rpc List (ListBusesRequest) returns (ListBusesResponse) {
    option (google.api.http) = { get: "/eventrouter/v1/buses" };
  }

  // Creates a bus in the specified folder.
  rpc Create (CreateBusRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/eventrouter/v1/buses" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateBusMetadata"
      response: "Bus"
    };
  }

  // Updates the specified bus.
  rpc Update (UpdateBusRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/eventrouter/v1/buses/{bus_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateBusMetadata"
      response: "Bus"
    };
  }

  // Deletes the specified bus.
  rpc Delete (DeleteBusRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/eventrouter/v1/buses/{bus_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteBusMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Lists operations for the specified bus.
  rpc ListOperations (ListBusOperationsRequest) returns (ListBusOperationsResponse) {
    option (google.api.http) = { get: "/eventrouter/v1/buses/{bus_id}/operations" };
  }

  // Lists existing access bindings for the specified bus.
  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse) {
    option (google.api.http) = {get: "/eventrouter/v1/buses/{resource_id}:listAccessBindings"};
  }

  // Sets access bindings for the bus.
  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/eventrouter/v1/buses/{resource_id}:setAccessBindings"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Updates access bindings for the specified bus.
  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = {
      patch: "/eventrouter/v1/buses/{resource_id}:updateAccessBindings"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetBusRequest {
  // ID of the bus to get.
  string bus_id = 1 [(required) = true];
}

message ListBusesRequest {
  // ID of the folder to list buses in.
  string folder_id = 1 [(required) = true];

  // Maximum number of buses to return.
  int64 page_size = 2;

  // Page token. To get the next page of results, set `page_token` to the
  // [ListBusesResponse.next_page_token] returned by a previous list request.
  string page_token = 3;

  // Supported fields for filter:
  //   name
  //   created_at
  string filter = 4;
}

message ListBusesResponse {
  // List of buses.
  repeated Bus buses = 1;

  // Token for getting the next page of the list of buses.
  string next_page_token = 2;
}

message CreateBusRequest {
  // ID of the folder to create a bus in.
  string folder_id = 1 [(required) = true];
  
  // Name of the bus.
  string name = 2 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
  
  // Description of the bus.
  string description = 3 [(length) = "<=256"];

  // Labels for the bus.
  map<string, string> labels = 4 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  
  // Flag that disallow deletion of the bus.
  bool deletion_protection = 5;

  // Is logging from the bus enabled.
  bool logging_enabled = 6;

  // Options for logging from the bus.
  LogOptions log_options = 7;
}

message CreateBusMetadata {
  // ID of the bus that is being created.
  string bus_id = 1;

  // ID of the folder that the bus is being created in.
  string folder_id = 2;
}

message UpdateBusRequest {
  // ID of the bus to update.
  string bus_id = 1 [(required) = true];

  // Field mask that specifies which fields of the bus are going to be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New name of the bus.
  string name = 3 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];

  //  New description of the bus.
  string description = 4 [(length) = "<=256"];

  // New labels of the bus.
  map<string, string> labels = 5 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  
  // New flag that disallow deletion of the bus.
  bool deletion_protection = 6;

  // Is logging from the bus enabled.
  bool logging_enabled = 7;

  // New options for logging from the bus.
  LogOptions log_options = 8;
}

message UpdateBusMetadata {
  // ID of the bus that is being updated.
  string bus_id = 1 [(required) = true];
}

message DeleteBusRequest {
  // ID of the bus to delete.
  string bus_id = 1 [(required) = true];
}

message DeleteBusMetadata {
  // ID of the bus that is being deleted.
  string bus_id = 1 [(required) = true];
}

message ListBusOperationsRequest {
  // ID of the bus to list operations for.
  string bus_id = 1 [(required) = true];

  // Maximum number of operations to return.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. To get the next page of results, set `page_token` to the
  // [ListBusesResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // Supported attributes for filter:
  //   description
  //   created_at
  //   modified_at
  //   created_by
  //   done
  string filter = 4 [(length) = "<=1000"];
}

message ListBusOperationsResponse {
  // List of operations for the specified bus.
  repeated operation.Operation operations = 1;

  // Token for getting the next page of the list of operations.
  string next_page_token = 2;
}
